GAS LISTING /tmp/cctlmwZi.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z4funcPPi
   9              	_Z4funcPPi:
  10              	.LFB39:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** //
   2:src/main.cpp  **** // Created by marko on 20.4.22..
   3:src/main.cpp  **** //
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "../h/ccb.hpp"
   6:src/main.cpp  **** 
   7:src/main.cpp  **** #include "../h/print.hpp"
   8:src/main.cpp  **** #include "../h/riscv.hpp"
   9:src/main.cpp  **** 
  10:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
  11:src/main.cpp  **** #include "../lib/console.h"
  12:src/main.cpp  **** 
  13:src/main.cpp  **** extern void userMain();
  14:src/main.cpp  **** 
  15:src/main.cpp  **** 
  16:src/main.cpp  **** void func(int** b){
  12              		.loc 1 16 19
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  17:src/main.cpp  ****     b[0][0] = 3;
  21              		.loc 1 17 5
  22              		.loc 1 17 11 is_stmt 0
  23 000c 83370500 		ld	a5,0(a0)
  24              		.loc 1 17 13
  25 0010 13073000 		li	a4,3
  26 0014 23A0E700 		sw	a4,0(a5)
  18:src/main.cpp  **** }
  27              		.loc 1 18 1
  28 0018 03348100 		ld	s0,8(sp)
  29              		.cfi_restore 8
  30              		.cfi_def_cfa 2, 16
  31 001c 13010101 		addi	sp,sp,16
  32              		.cfi_def_cfa_offset 0
  33 0020 67800000 		jr	ra
  34              		.cfi_endproc
  35              	.LFE39:
  37              		.section	.rodata.str1.8,"aMS",@progbits,1
  38              		.align	3
  39              	.LC0:
  40 0000 55736572 		.string	"UserMode Started \n"
  40      4D6F6465 
GAS LISTING /tmp/cctlmwZi.s 			page 2


  40      20537461 
  40      72746564 
  40      200A00
  41 0013 00000000 		.align	3
  41      00
  42              	.LC1:
  43 0018 46696E69 		.string	"Finished\n"
  43      73686564 
  43      0A00
  44              		.text
  45              		.align	2
  46              		.globl	main
  48              	main:
  49              	.LFB40:
  19:src/main.cpp  **** 
  20:src/main.cpp  **** 
  21:src/main.cpp  **** int main()
  22:src/main.cpp  **** {
  50              		.loc 1 22 1 is_stmt 1
  51              		.cfi_startproc
  52 0024 130101FE 		addi	sp,sp,-32
  53              		.cfi_def_cfa_offset 32
  54 0028 233C1100 		sd	ra,24(sp)
  55 002c 23388100 		sd	s0,16(sp)
  56 0030 23349100 		sd	s1,8(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60 0034 13040102 		addi	s0,sp,32
  61              		.cfi_def_cfa 8, 0
  23:src/main.cpp  **** 
  24:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  62              		.loc 1 24 5
  63              		.loc 1 24 19 is_stmt 0
  64 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  64      83B70700 
  65              	.LVL1:
  66              	.LBB9:
  67              	.LBB10:
  68              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp ****     static uint64 mode;
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void Rezim();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     static void Mode(uint64 x);
GAS LISTING /tmp/cctlmwZi.s 			page 3


  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  20:src/../h/riscv.hpp ****     static void pushRegisters();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  23:src/../h/riscv.hpp ****     static void popRegisters();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register scause
  26:src/../h/riscv.hpp ****     static uint64 r_scause();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register scause
  29:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // read register sepc
  32:src/../h/riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register sepc
  35:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // read register stvec
  38:src/../h/riscv.hpp ****     static uint64 r_stvec();
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // write register stvec
  41:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // read register stval
  44:src/../h/riscv.hpp ****     static uint64 r_stval();
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // write register stval
  47:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     //ld reg adr
  50:src/../h/riscv.hpp ****     static void ld_a();
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     //read a0 rg
  53:src/../h/riscv.hpp ****     static uint64 r_a0();
  54:src/../h/riscv.hpp ****     //read a0 rg
  55:src/../h/riscv.hpp ****     static uint64 r_a1();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSip
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  61:src/../h/riscv.hpp ****         SIP_STIE = (1 << 5),
  62:src/../h/riscv.hpp ****         SIP_SEIE = (1 << 9),
  63:src/../h/riscv.hpp ****     };
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     // mask set register sip
  66:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     // mask clear register sip
  69:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // read register sip
  72:src/../h/riscv.hpp ****     static uint64 r_sip();
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     // write register sip
GAS LISTING /tmp/cctlmwZi.s 			page 4


  75:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     enum BitMaskSstatus
  78:src/../h/riscv.hpp ****     {
  79:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  80:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  81:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  82:src/../h/riscv.hpp ****     };
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // mask set register sstatus
  85:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     // mask clear register sstatus
  88:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp ****     // read register sstatus
  91:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp ****     // write register sstatus
  94:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  95:src/../h/riscv.hpp ****     //sup trap
  96:src/../h/riscv.hpp ****     static void supervisorTrap();
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** private:
 100:src/../h/riscv.hpp ****     //sup handler
 101:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** };
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     uint64 volatile scause;
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 109:src/../h/riscv.hpp ****     return scause;
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 113:src/../h/riscv.hpp **** {
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     uint64 volatile sepc;
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 121:src/../h/riscv.hpp ****     return sepc;
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     uint64 volatile stvec;
GAS LISTING /tmp/cctlmwZi.s 			page 5


 132:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 133:src/../h/riscv.hpp ****     return stvec;
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  69              		.loc 2 138 5 is_stmt 1
  70              		.loc 2 138 69 is_stmt 0
  71              	#APP
  72              	# 138 "src/../h/riscv.hpp" 1
 139              	}
  73              		csrw stvec, a5
  74              	# 0 "" 2
  75              	.LVL2:
  76              	#NO_APP
  77              	.LBE10:
  78              	.LBE9:
  25:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  79              		.loc 1 25 5 is_stmt 1
  80              	.LBB11:
  81              	.LBB12:
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 142:src/../h/riscv.hpp **** {
 143:src/../h/riscv.hpp ****     uint64 volatile stval;
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 145:src/../h/riscv.hpp ****     return stval;
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 151:src/../h/riscv.hpp **** }
 152:src/../h/riscv.hpp **** 
 153:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 154:src/../h/riscv.hpp **** {
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/riscv.hpp **** }
 157:src/../h/riscv.hpp **** 
 158:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 159:src/../h/riscv.hpp **** {
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
 163:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 164:src/../h/riscv.hpp **** {
 165:src/../h/riscv.hpp ****     uint64 volatile sip;
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 167:src/../h/riscv.hpp ****     return sip;
 168:src/../h/riscv.hpp **** }
 169:src/../h/riscv.hpp **** 
 170:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 171:src/../h/riscv.hpp **** {
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 173:src/../h/riscv.hpp **** }
 174:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cctlmwZi.s 			page 6


 175:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 176:src/../h/riscv.hpp **** {
 177:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  82              		.loc 2 177 5
  83              		.loc 2 177 68 is_stmt 0
  84 0044 93072000 		li	a5,2
  85              	#APP
  86              	# 177 "src/../h/riscv.hpp" 1
 178              	}
  87              		csrs sstatus, a5
  88              	# 0 "" 2
  89              	.LVL3:
  90              	#NO_APP
  91              	.LBE12:
  92              	.LBE11:
  26:src/main.cpp  ****     //_thread :: running = _thread ::createCoroutine(nullptr, nullptr);
  27:src/main.cpp  ****     Riscv ::Mode(1);
  93              		.loc 1 27 5 is_stmt 1
  94              		.loc 1 27 17 is_stmt 0
  95 004c 13051000 		li	a0,1
  96 0050 97000000 		call	_ZN5Riscv4ModeEm@plt
  96      E7800000 
  97              	.LVL4:
  28:src/main.cpp  ****    // __asm__ volatile ("ecall");
  29:src/main.cpp  **** 
  30:src/main.cpp  ****     //2 supervisor 1 user mode
  31:src/main.cpp  ****     /*int** b =new int*[4];  // Allocate memory for rows
  32:src/main.cpp  **** 
  33:src/main.cpp  ****     for (int i = 0; i < 4; i++) {
  34:src/main.cpp  ****         b[i] = new int[4];   // Allocate memory for each row
  35:src/main.cpp  ****     }
  36:src/main.cpp  ****     b[0][0] = 5;
  37:src/main.cpp  ****     printInteger(b[0][0]);
  38:src/main.cpp  ****     func(b);
  39:src/main.cpp  ****     printInteger(b[0][0]);*/
  40:src/main.cpp  **** 
  41:src/main.cpp  ****     //userM();
  42:src/main.cpp  ****     printString2("UserMode Started \n");
  98              		.loc 1 42 5 is_stmt 1
  99              		.loc 1 42 17 is_stmt 0
 100 0058 17050000 		lla	a0,.LC0
 100      13050500 
 101 0060 97000000 		call	_Z12printString2PKc@plt
 101      E7800000 
 102              	.LVL5:
  43:src/main.cpp  ****     userMain();
 103              		.loc 1 43 5 is_stmt 1
 104              		.loc 1 43 13 is_stmt 0
 105 0068 97000000 		call	_Z8userMainv@plt
 105      E7800000 
 106              	.LVL6:
  44:src/main.cpp  ****     //thread_t user;
  45:src/main.cpp  ****     //thread_create(&user, userMain, nullptr);
  46:src/main.cpp  ****     //while(!user->isFinished()) {
  47:src/main.cpp  ****       //  thread_dispatch();
  48:src/main.cpp  ****     //}
  49:src/main.cpp  ****     //Riscv ::Mode(1);
GAS LISTING /tmp/cctlmwZi.s 			page 7


  50:src/main.cpp  **** 
  51:src/main.cpp  **** 
  52:src/main.cpp  ****     //delete user;
  53:src/main.cpp  **** 
  54:src/main.cpp  ****     printString2("Finished\n");
 107              		.loc 1 54 5 is_stmt 1
 108              		.loc 1 54 17 is_stmt 0
 109 0070 17050000 		lla	a0,.LC1
 109      13050500 
 110 0078 97000000 		call	_Z12printString2PKc@plt
 110      E7800000 
 111              	.LVL7:
  55:src/main.cpp  **** 
  56:src/main.cpp  ****     delete _thread :: running;
 112              		.loc 1 56 5 is_stmt 1
 113              		.loc 1 56 23 is_stmt 0
 114 0080 97070000 		la	a5,_ZN7_thread7runningE
 114      83B70700 
 115 0088 83B40700 		ld	s1,0(a5)
 116              		.loc 1 56 30
 117 008c 63800402 		beqz	s1,.L4
 118              	.LVL8:
 119              	.LBB13:
 120              	.LBB14:
 121              		.file 3 "src/../h/ccb.hpp"
   1:src/../h/ccb.hpp **** //
   2:src/../h/ccb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/ccb.hpp **** //
   4:src/../h/ccb.hpp **** 
   5:src/../h/ccb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_CCB_HPP
   6:src/../h/ccb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_CCB_HPP
   7:src/../h/ccb.hpp **** 
   8:src/../h/ccb.hpp **** #include "../lib/hw.h"
   9:src/../h/ccb.hpp **** #include "scheduler.hpp"
  10:src/../h/ccb.hpp **** 
  11:src/../h/ccb.hpp **** //#include "../h/_sem.hpp"
  12:src/../h/ccb.hpp **** 
  13:src/../h/ccb.hpp **** // Coroutine Control Block
  14:src/../h/ccb.hpp **** class  _thread
  15:src/../h/ccb.hpp **** {
  16:src/../h/ccb.hpp **** public:
  17:src/../h/ccb.hpp **** 
  18:src/../h/ccb.hpp ****     //novo
  19:src/../h/ccb.hpp ****     static void join(thread_t* handle);
  20:src/../h/ccb.hpp ****     bool isblk(){return blk;}
  21:src/../h/ccb.hpp ****     void setblk(bool val){blk = val;}
  22:src/../h/ccb.hpp ****     uint64 retID(){return this->id;}
  23:src/../h/ccb.hpp ****     static void dispatch();
  24:src/../h/ccb.hpp **** 
  25:src/../h/ccb.hpp ****     ~ _thread() { delete[] stack; }
 122              		.loc 3 25 19 is_stmt 1
 123              		.loc 3 25 28 is_stmt 0
 124 0090 03B58402 		ld	a0,40(s1)
 125              		.loc 3 25 33
 126 0094 63060500 		beqz	a0,.L5
 127              		.loc 3 25 28
 128 0098 97000000 		call	_ZdaPv@plt
GAS LISTING /tmp/cctlmwZi.s 			page 8


 128      E7800000 
 129              	.LVL9:
 130              	.L5:
 131              	.LBE14:
 132              	.LBE13:
 133              		.loc 1 56 23
 134 00a0 13850400 		mv	a0,s1
 135 00a4 97000000 		call	_ZdlPv@plt
 135      E7800000 
 136              	.LVL10:
 137              	.L4:
  57:src/main.cpp  **** 
  58:src/main.cpp  ****     return 0;
 138              		.loc 1 58 5 is_stmt 1
  59:src/main.cpp  **** }
 139              		.loc 1 59 1 is_stmt 0
 140 00ac 13050000 		li	a0,0
 141 00b0 83308101 		ld	ra,24(sp)
 142              		.cfi_restore 1
 143 00b4 03340101 		ld	s0,16(sp)
 144              		.cfi_restore 8
 145              		.cfi_def_cfa 2, 32
 146 00b8 83348100 		ld	s1,8(sp)
 147              		.cfi_restore 9
 148 00bc 13010102 		addi	sp,sp,32
 149              		.cfi_def_cfa_offset 0
 150 00c0 67800000 		jr	ra
 151              		.cfi_endproc
 152              	.LFE40:
 154              	.Letext0:
 155              		.file 4 "src/../h/../lib/hw.h"
 156              		.file 5 "src/../h/scheduler.hpp"
 157              		.file 6 "src/../h/print.hpp"
 158              		.file 7 "src/../h/../h/syscall_c.h"
GAS LISTING /tmp/cctlmwZi.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cctlmwZi.s:9      .text:0000000000000000 _Z4funcPPi
     /tmp/cctlmwZi.s:13     .text:0000000000000000 .L0 
     /tmp/cctlmwZi.s:15     .text:0000000000000000 .L0 
     /tmp/cctlmwZi.s:16     .text:0000000000000004 .L0 
     /tmp/cctlmwZi.s:18     .text:0000000000000008 .L0 
     /tmp/cctlmwZi.s:20     .text:000000000000000c .L0 
     /tmp/cctlmwZi.s:22     .text:000000000000000c .L0 
     /tmp/cctlmwZi.s:23     .text:000000000000000c .L0 
     /tmp/cctlmwZi.s:25     .text:0000000000000010 .L0 
     /tmp/cctlmwZi.s:28     .text:0000000000000018 .L0 
     /tmp/cctlmwZi.s:29     .text:000000000000001c .L0 
     /tmp/cctlmwZi.s:30     .text:000000000000001c .L0 
     /tmp/cctlmwZi.s:32     .text:0000000000000020 .L0 
     /tmp/cctlmwZi.s:34     .text:0000000000000024 .L0 
     /tmp/cctlmwZi.s:48     .text:0000000000000024 main
     /tmp/cctlmwZi.s:51     .text:0000000000000024 .L0 
     /tmp/cctlmwZi.s:52     .text:0000000000000024 .L0 
     /tmp/cctlmwZi.s:53     .text:0000000000000028 .L0 
     /tmp/cctlmwZi.s:57     .text:0000000000000034 .L0 
     /tmp/cctlmwZi.s:58     .text:0000000000000034 .L0 
     /tmp/cctlmwZi.s:59     .text:0000000000000034 .L0 
     /tmp/cctlmwZi.s:61     .text:0000000000000038 .L0 
     /tmp/cctlmwZi.s:63     .text:0000000000000038 .L0 
     /tmp/cctlmwZi.s:64     .text:0000000000000038 .L0 
     /tmp/cctlmwZi.s:70     .text:0000000000000040 .L0 
  src/../h/riscv.hpp:138    .text:0000000000000040 .L0 
     /tmp/cctlmwZi.s:82     .text:0000000000000044 .L0 
     /tmp/cctlmwZi.s:83     .text:0000000000000044 .L0 
     /tmp/cctlmwZi.s:84     .text:0000000000000044 .L0 
     /tmp/cctlmwZi.s:94     .text:000000000000004c .L0 
     /tmp/cctlmwZi.s:95     .text:000000000000004c .L0 
     /tmp/cctlmwZi.s:99     .text:0000000000000058 .L0 
     /tmp/cctlmwZi.s:100    .text:0000000000000058 .L0 
     /tmp/cctlmwZi.s:104    .text:0000000000000068 .L0 
     /tmp/cctlmwZi.s:105    .text:0000000000000068 .L0 
     /tmp/cctlmwZi.s:108    .text:0000000000000070 .L0 
     /tmp/cctlmwZi.s:109    .text:0000000000000070 .L0 
     /tmp/cctlmwZi.s:113    .text:0000000000000080 .L0 
     /tmp/cctlmwZi.s:114    .text:0000000000000080 .L0 
     /tmp/cctlmwZi.s:117    .text:000000000000008c .L0 
     /tmp/cctlmwZi.s:123    .text:0000000000000090 .L0 
     /tmp/cctlmwZi.s:124    .text:0000000000000090 .L0 
     /tmp/cctlmwZi.s:126    .text:0000000000000094 .L0 
     /tmp/cctlmwZi.s:128    .text:0000000000000098 .L0 
     /tmp/cctlmwZi.s:134    .text:00000000000000a0 .L0 
     /tmp/cctlmwZi.s:139    .text:00000000000000ac .L0 
     /tmp/cctlmwZi.s:140    .text:00000000000000ac .L0 
     /tmp/cctlmwZi.s:142    .text:00000000000000b4 .L0 
     /tmp/cctlmwZi.s:144    .text:00000000000000b8 .L0 
     /tmp/cctlmwZi.s:145    .text:00000000000000b8 .L0 
     /tmp/cctlmwZi.s:147    .text:00000000000000bc .L0 
     /tmp/cctlmwZi.s:149    .text:00000000000000c0 .L0 
     /tmp/cctlmwZi.s:151    .text:00000000000000c4 .L0 
     /tmp/cctlmwZi.s:159    .text:00000000000000c4 .L0 
     /tmp/cctlmwZi.s:64     .text:0000000000000038 .L0 
GAS LISTING /tmp/cctlmwZi.s 			page 10


     /tmp/cctlmwZi.s:39     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cctlmwZi.s:100    .text:0000000000000058 .L0 
     /tmp/cctlmwZi.s:42     .rodata.str1.8:0000000000000018 .LC1
     /tmp/cctlmwZi.s:109    .text:0000000000000070 .L0 
     /tmp/cctlmwZi.s:114    .text:0000000000000080 .L0 
     /tmp/cctlmwZi.s:137    .text:00000000000000ac .L4
     /tmp/cctlmwZi.s:130    .text:00000000000000a0 .L5
     /tmp/cctlmwZi.s:1087   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cctlmwZi.s:2182   .debug_str:000000000000064d .LASF126
     /tmp/cctlmwZi.s:2080   .debug_str:0000000000000393 .LASF127
     /tmp/cctlmwZi.s:2186   .debug_str:0000000000000716 .LASF128
     /tmp/cctlmwZi.s:5      .text:0000000000000000 .Ltext0
     /tmp/cctlmwZi.s:154    .text:00000000000000c4 .Letext0
     /tmp/cctlmwZi.s:1956   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cctlmwZi.s:2114   .debug_str:00000000000004a9 .LASF0
     /tmp/cctlmwZi.s:2126   .debug_str:00000000000004d6 .LASF1
     /tmp/cctlmwZi.s:2096   .debug_str:0000000000000439 .LASF2
     /tmp/cctlmwZi.s:2064   .debug_str:0000000000000344 .LASF4
     /tmp/cctlmwZi.s:2162   .debug_str:00000000000005b2 .LASF3
     /tmp/cctlmwZi.s:1986   .debug_str:00000000000000c6 .LASF5
     /tmp/cctlmwZi.s:2130   .debug_str:00000000000004f1 .LASF6
     /tmp/cctlmwZi.s:2112   .debug_str:0000000000000496 .LASF7
     /tmp/cctlmwZi.s:2194   .debug_str:0000000000000757 .LASF8
     /tmp/cctlmwZi.s:2048   .debug_str:00000000000002c2 .LASF9
     /tmp/cctlmwZi.s:2144   .debug_str:0000000000000544 .LASF10
     /tmp/cctlmwZi.s:2132   .debug_str:0000000000000504 .LASF11
     /tmp/cctlmwZi.s:1990   .debug_str:00000000000000d9 .LASF12
     /tmp/cctlmwZi.s:1964   .debug_str:000000000000002b .LASF13
     /tmp/cctlmwZi.s:2004   .debug_str:000000000000014b .LASF14
     /tmp/cctlmwZi.s:2154   .debug_str:0000000000000577 .LASF15
     /tmp/cctlmwZi.s:2014   .debug_str:000000000000018e .LASF16
     /tmp/cctlmwZi.s:1958   .debug_str:0000000000000000 .LASF17
     /tmp/cctlmwZi.s:2062   .debug_str:000000000000033c .LASF43
     /tmp/cctlmwZi.s:1972   .debug_str:000000000000004f .LASF129
     /tmp/cctlmwZi.s:2164   .debug_str:00000000000005c4 .LASF58
     /tmp/cctlmwZi.s:1992   .debug_str:00000000000000e9 .LASF60
     /tmp/cctlmwZi.s:2122   .debug_str:00000000000004ca .LASF18
     /tmp/cctlmwZi.s:2012   .debug_str:000000000000017a .LASF20
     /tmp/cctlmwZi.s:2208   .debug_str:00000000000007cb .LASF22
     /tmp/cctlmwZi.s:2110   .debug_str:0000000000000481 .LASF24
     /tmp/cctlmwZi.s:1968   .debug_str:0000000000000044 .LASF19
     /tmp/cctlmwZi.s:2210   .debug_str:00000000000007d2 .LASF21
     /tmp/cctlmwZi.s:2118   .debug_str:00000000000004bb .LASF34
     /tmp/cctlmwZi.s:2176   .debug_str:000000000000061d .LASF36
     /tmp/cctlmwZi.s:2188   .debug_str:000000000000072c .LASF23
     /tmp/cctlmwZi.s:2136   .debug_str:000000000000051e .LASF25
     /tmp/cctlmwZi.s:2134   .debug_str:0000000000000513 .LASF26
     /tmp/cctlmwZi.s:2094   .debug_str:000000000000041e .LASF27
     /tmp/cctlmwZi.s:2098   .debug_str:0000000000000447 .LASF28
     /tmp/cctlmwZi.s:2092   .debug_str:0000000000000403 .LASF29
     /tmp/cctlmwZi.s:2204   .debug_str:00000000000007b0 .LASF30
     /tmp/cctlmwZi.s:2042   .debug_str:0000000000000281 .LASF31
     /tmp/cctlmwZi.s:2150   .debug_str:000000000000056b .LASF130
     /tmp/cctlmwZi.s:2044   .debug_str:00000000000002a8 .LASF32
     /tmp/cctlmwZi.s:1978   .debug_str:0000000000000068 .LASF33
     /tmp/cctlmwZi.s:2156   .debug_str:000000000000058d .LASF35
     /tmp/cctlmwZi.s:2178   .debug_str:0000000000000634 .LASF37
GAS LISTING /tmp/cctlmwZi.s 			page 11


     /tmp/cctlmwZi.s:2206   .debug_str:00000000000007c0 .LASF38
     /tmp/cctlmwZi.s:2116   .debug_str:00000000000004b6 .LASF39
     /tmp/cctlmwZi.s:2032   .debug_str:0000000000000245 .LASF54
     /tmp/cctlmwZi.s:2224   .debug_str:000000000000082f .LASF40
     /tmp/cctlmwZi.s:2006   .debug_str:0000000000000157 .LASF41
     /tmp/cctlmwZi.s:2202   .debug_str:0000000000000799 .LASF42
     /tmp/cctlmwZi.s:2198   .debug_str:000000000000076c .LASF44
     /tmp/cctlmwZi.s:2070   .debug_str:0000000000000367 .LASF45
     /tmp/cctlmwZi.s:2120   .debug_str:00000000000004c4 .LASF46
     /tmp/cctlmwZi.s:2074   .debug_str:0000000000000377 .LASF47
     /tmp/cctlmwZi.s:2068   .debug_str:000000000000035e .LASF48
     /tmp/cctlmwZi.s:2086   .debug_str:00000000000003b1 .LASF106
     /tmp/cctlmwZi.s:2052   .debug_str:00000000000002e6 .LASF108
     /tmp/cctlmwZi.s:2008   .debug_str:0000000000000160 .LASF131
     /tmp/cctlmwZi.s:2090   .debug_str:00000000000003d7 .LASF132
     /tmp/cctlmwZi.s:2084   .debug_str:00000000000003a6 .LASF133
     /tmp/cctlmwZi.s:2038   .debug_str:0000000000000269 .LASF49
     /tmp/cctlmwZi.s:2124   .debug_str:00000000000004d0 .LASF50
     /tmp/cctlmwZi.s:2018   .debug_str:00000000000001b8 .LASF134
     /tmp/cctlmwZi.s:2010   .debug_str:000000000000016e .LASF51
     /tmp/cctlmwZi.s:2212   .debug_str:00000000000007e6 .LASF52
     /tmp/cctlmwZi.s:1988   .debug_str:00000000000000cd .LASF53
     /tmp/cctlmwZi.s:2146   .debug_str:0000000000000553 .LASF55
     /tmp/cctlmwZi.s:2046   .debug_str:00000000000002bc .LASF56
     /tmp/cctlmwZi.s:2020   .debug_str:00000000000001c7 .LASF57
     /tmp/cctlmwZi.s:2196   .debug_str:0000000000000767 .LASF59
     /tmp/cctlmwZi.s:2024   .debug_str:00000000000001fb .LASF61
     /tmp/cctlmwZi.s:1982   .debug_str:00000000000000a4 .LASF62
     /tmp/cctlmwZi.s:2030   .debug_str:000000000000022a .LASF63
     /tmp/cctlmwZi.s:2172   .debug_str:00000000000005fd .LASF64
     /tmp/cctlmwZi.s:1962   .debug_str:0000000000000011 .LASF65
     /tmp/cctlmwZi.s:1966   .debug_str:000000000000003b .LASF68
     /tmp/cctlmwZi.s:2170   .debug_str:00000000000005e8 .LASF70
     /tmp/cctlmwZi.s:2028   .debug_str:0000000000000221 .LASF66
     /tmp/cctlmwZi.s:2026   .debug_str:000000000000020c .LASF67
     /tmp/cctlmwZi.s:2104   .debug_str:0000000000000463 .LASF69
     /tmp/cctlmwZi.s:2148   .debug_str:0000000000000558 .LASF71
     /tmp/cctlmwZi.s:2152   .debug_str:0000000000000570 .LASF72
     /tmp/cctlmwZi.s:2174   .debug_str:000000000000060a .LASF73
     /tmp/cctlmwZi.s:2128   .debug_str:00000000000004e9 .LASF74
     /tmp/cctlmwZi.s:2016   .debug_str:00000000000001a4 .LASF75
     /tmp/cctlmwZi.s:1960   .debug_str:0000000000000009 .LASF76
     /tmp/cctlmwZi.s:2054   .debug_str:0000000000000303 .LASF77
     /tmp/cctlmwZi.s:2034   .debug_str:000000000000024d .LASF78
     /tmp/cctlmwZi.s:1994   .debug_str:00000000000000ff .LASF79
     /tmp/cctlmwZi.s:2222   .debug_str:0000000000000827 .LASF80
     /tmp/cctlmwZi.s:2036   .debug_str:0000000000000255 .LASF81
     /tmp/cctlmwZi.s:2184   .debug_str:0000000000000711 .LASF82
     /tmp/cctlmwZi.s:2108   .debug_str:0000000000000470 .LASF83
     /tmp/cctlmwZi.s:1970   .debug_str:000000000000004a .LASF84
     /tmp/cctlmwZi.s:1980   .debug_str:0000000000000093 .LASF85
     /tmp/cctlmwZi.s:2180   .debug_str:0000000000000648 .LASF86
     /tmp/cctlmwZi.s:2218   .debug_str:000000000000080b .LASF87
     /tmp/cctlmwZi.s:2078   .debug_str:000000000000038c .LASF88
     /tmp/cctlmwZi.s:2214   .debug_str:00000000000007f3 .LASF89
     /tmp/cctlmwZi.s:2140   .debug_str:0000000000000534 .LASF90
     /tmp/cctlmwZi.s:2040   .debug_str:000000000000026e .LASF91
GAS LISTING /tmp/cctlmwZi.s 			page 12


     /tmp/cctlmwZi.s:2106   .debug_str:000000000000046a .LASF92
     /tmp/cctlmwZi.s:2190   .debug_str:0000000000000735 .LASF93
     /tmp/cctlmwZi.s:2082   .debug_str:00000000000003a0 .LASF94
     /tmp/cctlmwZi.s:2228   .debug_str:000000000000083b .LASF95
     /tmp/cctlmwZi.s:2220   .debug_str:000000000000081c .LASF96
     /tmp/cctlmwZi.s:2158   .debug_str:0000000000000593 .LASF97
     /tmp/cctlmwZi.s:2072   .debug_str:000000000000036c .LASF98
     /tmp/cctlmwZi.s:2088   .debug_str:00000000000003bf .LASF99
     /tmp/cctlmwZi.s:2002   .debug_str:0000000000000141 .LASF100
     /tmp/cctlmwZi.s:2058   .debug_str:000000000000031c .LASF101
     /tmp/cctlmwZi.s:1974   .debug_str:0000000000000057 .LASF102
     /tmp/cctlmwZi.s:2050   .debug_str:00000000000002d0 .LASF103
     /tmp/cctlmwZi.s:2166   .debug_str:00000000000005c9 .LASF104
     /tmp/cctlmwZi.s:1996   .debug_str:0000000000000113 .LASF105
     /tmp/cctlmwZi.s:2200   .debug_str:0000000000000784 .LASF107
     /tmp/cctlmwZi.s:2022   .debug_str:00000000000001d9 .LASF109
     /tmp/cctlmwZi.s:2056   .debug_str:0000000000000317 .LASF110
     /tmp/cctlmwZi.s:2000   .debug_str:000000000000013c .LASF111
     /tmp/cctlmwZi.s:49     .text:0000000000000024 .LFB40
     /tmp/cctlmwZi.s:152    .text:00000000000000c4 .LFE40
     /tmp/cctlmwZi.s:66     .text:0000000000000040 .LBB9
     /tmp/cctlmwZi.s:78     .text:0000000000000044 .LBE9
     /tmp/cctlmwZi.s:80     .text:0000000000000044 .LBB11
     /tmp/cctlmwZi.s:92     .text:000000000000004c .LBE11
     /tmp/cctlmwZi.s:1928   .debug_loc:0000000000000000 .LLST0
     /tmp/cctlmwZi.s:119    .text:0000000000000090 .LBB13
     /tmp/cctlmwZi.s:132    .text:00000000000000a0 .LBE13
     /tmp/cctlmwZi.s:1936   .debug_loc:0000000000000024 .LLST1
     /tmp/cctlmwZi.s:129    .text:00000000000000a0 .LVL9
     /tmp/cctlmwZi.s:97     .text:0000000000000058 .LVL4
     /tmp/cctlmwZi.s:102    .text:0000000000000068 .LVL5
     /tmp/cctlmwZi.s:106    .text:0000000000000070 .LVL6
     /tmp/cctlmwZi.s:111    .text:0000000000000080 .LVL7
     /tmp/cctlmwZi.s:136    .text:00000000000000ac .LVL10
     /tmp/cctlmwZi.s:2102   .debug_str:000000000000045e .LASF112
     /tmp/cctlmwZi.s:2100   .debug_str:0000000000000453 .LASF113
     /tmp/cctlmwZi.s:10     .text:0000000000000000 .LFB39
     /tmp/cctlmwZi.s:35     .text:0000000000000024 .LFE39
     /tmp/cctlmwZi.s:2226   .debug_str:0000000000000836 .LASF114
     /tmp/cctlmwZi.s:2138   .debug_str:000000000000052e .LASF115
     /tmp/cctlmwZi.s:2216   .debug_str:0000000000000806 .LASF116
     /tmp/cctlmwZi.s:2060   .debug_str:0000000000000332 .LASF117
     /tmp/cctlmwZi.s:2192   .debug_str:0000000000000747 .LASF135
     /tmp/cctlmwZi.s:2160   .debug_str:00000000000005ab .LASF122
     /tmp/cctlmwZi.s:2066   .debug_str:000000000000034b .LASF124
     /tmp/cctlmwZi.s:1984   .debug_str:00000000000000b2 .LASF118
     /tmp/cctlmwZi.s:1998   .debug_str:000000000000012f .LASF120
     /tmp/cctlmwZi.s:2076   .debug_str:000000000000037f .LASF119
     /tmp/cctlmwZi.s:2142   .debug_str:000000000000053b .LASF121
     /tmp/cctlmwZi.s:1976   .debug_str:0000000000000061 .LASF123
     /tmp/cctlmwZi.s:2168   .debug_str:00000000000005d8 .LASF125
     /tmp/cctlmwZi.s:75     .text:0000000000000044 .LVL2
     /tmp/cctlmwZi.s:89     .text:000000000000004c .LVL3
     /tmp/cctlmwZi.s:118    .text:0000000000000090 .LVL8
     /tmp/cctlmwZi.s:160    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
GAS LISTING /tmp/cctlmwZi.s 			page 13


_ZN5Riscv14supervisorTrapEv
_ZN5Riscv4ModeEm
_Z12printString2PKc
_Z8userMainv
_ZN7_thread7runningE
_ZdaPv
_ZdlPv
