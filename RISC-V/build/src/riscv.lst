GAS LISTING /tmp/ccLHoJv4.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv4ModeEm
   9              	_ZN5Riscv4ModeEm:
  10              	.LFB44:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../lib/console.h"
   7:src/riscv.cpp **** #include "../h/scheduler.hpp"
   8:src/riscv.cpp **** #include "../h/ccb.hpp"
   9:src/riscv.cpp **** #include "../h/_sem.hpp"
  10:src/riscv.cpp **** #include "../lib/mem.h"
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** #include "../h/MemAlloc.hpp"
  13:src/riscv.cpp **** #include "../lib/console.h"
  14:src/riscv.cpp **** typedef _thread* thread_t;
  15:src/riscv.cpp **** typedef _sem* sem_t;
  16:src/riscv.cpp **** uint64 Riscv:: mode = 0;
  17:src/riscv.cpp **** //upamti ako je mode = 1 to je user mode i onda se ne izvrsava dobro
  18:src/riscv.cpp **** void Riscv ::Mode(uint64 x) {
  12              		.loc 1 18 29
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  19:src/riscv.cpp ****     mode = x;
  21              		.loc 1 19 5
  22              		.loc 1 19 10 is_stmt 0
  23 000c 97070000 		sd	a0,.LANCHOR0,a5
  23      23B0A700 
  20:src/riscv.cpp **** }
  24              		.loc 1 20 1
  25 0014 03348100 		ld	s0,8(sp)
  26              		.cfi_restore 8
  27              		.cfi_def_cfa 2, 16
  28 0018 13010101 		addi	sp,sp,16
  29              		.cfi_def_cfa_offset 0
  30 001c 67800000 		jr	ra
  31              		.cfi_endproc
  32              	.LFE44:
  34              		.align	2
  35              		.globl	_ZN5Riscv5RezimEv
  37              	_ZN5Riscv5RezimEv:
  38              	.LFB45:
  21:src/riscv.cpp **** 
GAS LISTING /tmp/ccLHoJv4.s 			page 2


  22:src/riscv.cpp **** void Riscv::Rezim()
  23:src/riscv.cpp **** {
  39              		.loc 1 23 1 is_stmt 1
  40              		.cfi_startproc
  41 0020 130101FF 		addi	sp,sp,-16
  42              		.cfi_def_cfa_offset 16
  43 0024 23348100 		sd	s0,8(sp)
  44              		.cfi_offset 8, -8
  45 0028 13040101 		addi	s0,sp,16
  46              		.cfi_def_cfa 8, 0
  24:src/riscv.cpp ****     switch(mode){
  47              		.loc 1 24 5
  48 002c 97070000 		ld	a5,.LANCHOR0
  48      83B70700 
  49 0034 13071000 		li	a4,1
  50 0038 6380E702 		beq	a5,a4,.L4
  51 003c 13072000 		li	a4,2
  52 0040 6382E702 		beq	a5,a4,.L5
  53              	.L6:
  25:src/riscv.cpp ****         case 1:
  26:src/riscv.cpp ****             mc_sstatus(Riscv::SSTATUS_SPP);
  27:src/riscv.cpp ****             break;
  28:src/riscv.cpp ****         case 2:
  29:src/riscv.cpp ****             ms_sstatus(Riscv::SSTATUS_SPP);
  30:src/riscv.cpp ****             break;
  31:src/riscv.cpp ****     }
  32:src/riscv.cpp **** 
  33:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  54              		.loc 1 33 5
  55              		.loc 1 33 39 is_stmt 0
  56              	#APP
  57              	# 33 "src/riscv.cpp" 1
  34              	    __asm__ volatile ("sret");
  58              		csrw sepc, ra
  59              	# 0 "" 2
  60              		.loc 1 34 5 is_stmt 1
  61              		.loc 1 34 30 is_stmt 0
  62              	# 34 "src/riscv.cpp" 1
  35              	}
  63              		sret
  64              	# 0 "" 2
  65              		.loc 1 35 1
  66              	#NO_APP
  67 004c 03348100 		ld	s0,8(sp)
  68              		.cfi_remember_state
  69              		.cfi_restore 8
  70              		.cfi_def_cfa 2, 16
  71 0050 13010101 		addi	sp,sp,16
  72              		.cfi_def_cfa_offset 0
  73 0054 67800000 		jr	ra
  74              	.L4:
  75              		.cfi_restore_state
  25:src/riscv.cpp ****         case 1:
  76              		.loc 1 25 9 is_stmt 1
  26:src/riscv.cpp ****             break;
  77              		.loc 1 26 13
  78              	.LVL1:
GAS LISTING /tmp/ccLHoJv4.s 			page 3


  79              	.LBB78:
  80              	.LBB79:
  81              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp ****     static uint64 mode;
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void Rezim();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     static void Mode(uint64 x);
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  20:src/../h/riscv.hpp ****     static void pushRegisters();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  23:src/../h/riscv.hpp ****     static void popRegisters();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register scause
  26:src/../h/riscv.hpp ****     static uint64 r_scause();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register scause
  29:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // read register sepc
  32:src/../h/riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register sepc
  35:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // read register stvec
  38:src/../h/riscv.hpp ****     static uint64 r_stvec();
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // write register stvec
  41:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // read register stval
  44:src/../h/riscv.hpp ****     static uint64 r_stval();
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // write register stval
  47:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     //ld reg adr
  50:src/../h/riscv.hpp ****     static void ld_a();
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     //read a0 rg
  53:src/../h/riscv.hpp ****     static uint64 r_a0();
  54:src/../h/riscv.hpp ****     //read a0 rg
GAS LISTING /tmp/ccLHoJv4.s 			page 4


  55:src/../h/riscv.hpp ****     static uint64 r_a1();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSip
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  61:src/../h/riscv.hpp ****         SIP_STIE = (1 << 5),
  62:src/../h/riscv.hpp ****         SIP_SEIE = (1 << 9),
  63:src/../h/riscv.hpp ****     };
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     // mask set register sip
  66:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     // mask clear register sip
  69:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // read register sip
  72:src/../h/riscv.hpp ****     static uint64 r_sip();
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     // write register sip
  75:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     enum BitMaskSstatus
  78:src/../h/riscv.hpp ****     {
  79:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  80:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  81:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  82:src/../h/riscv.hpp ****     };
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // mask set register sstatus
  85:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     // mask clear register sstatus
  88:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp ****     // read register sstatus
  91:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp ****     // write register sstatus
  94:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  95:src/../h/riscv.hpp ****     //sup trap
  96:src/../h/riscv.hpp ****     static void supervisorTrap();
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** private:
 100:src/../h/riscv.hpp ****     //sup handler
 101:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** };
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     uint64 volatile scause;
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 109:src/../h/riscv.hpp ****     return scause;
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccLHoJv4.s 			page 5


 112:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 113:src/../h/riscv.hpp **** {
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     uint64 volatile sepc;
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 121:src/../h/riscv.hpp ****     return sepc;
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     uint64 volatile stvec;
 132:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 133:src/../h/riscv.hpp ****     return stvec;
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 142:src/../h/riscv.hpp **** {
 143:src/../h/riscv.hpp ****     uint64 volatile stval;
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 145:src/../h/riscv.hpp ****     return stval;
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 151:src/../h/riscv.hpp **** }
 152:src/../h/riscv.hpp **** 
 153:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 154:src/../h/riscv.hpp **** {
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/riscv.hpp **** }
 157:src/../h/riscv.hpp **** 
 158:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 159:src/../h/riscv.hpp **** {
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
 163:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 164:src/../h/riscv.hpp **** {
 165:src/../h/riscv.hpp ****     uint64 volatile sip;
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 167:src/../h/riscv.hpp ****     return sip;
 168:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccLHoJv4.s 			page 6


 169:src/../h/riscv.hpp **** 
 170:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 171:src/../h/riscv.hpp **** {
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 173:src/../h/riscv.hpp **** }
 174:src/../h/riscv.hpp **** 
 175:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 176:src/../h/riscv.hpp **** {
 177:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 178:src/../h/riscv.hpp **** }
 179:src/../h/riscv.hpp **** 
 180:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 181:src/../h/riscv.hpp **** {
 182:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  82              		.loc 2 182 5
  83              		.loc 2 182 68 is_stmt 0
  84 0058 93070010 		li	a5,256
  85              	#APP
  86              	# 182 "src/../h/riscv.hpp" 1
 183              	}
  87              		csrc sstatus, a5
  88              	# 0 "" 2
  89              		.loc 2 183 1
  90              	#NO_APP
  91 0060 6FF05FFE 		j	.L6
  92              	.LVL2:
  93              	.L5:
  94              	.LBE79:
  95              	.LBE78:
  28:src/riscv.cpp ****             ms_sstatus(Riscv::SSTATUS_SPP);
  96              		.loc 1 28 9 is_stmt 1
  29:src/riscv.cpp ****             break;
  97              		.loc 1 29 13
  98              	.LBB80:
  99              	.LBB81:
 177:src/../h/riscv.hpp **** }
 100              		.loc 2 177 5
 177:src/../h/riscv.hpp **** }
 101              		.loc 2 177 68 is_stmt 0
 102 0064 93070010 		li	a5,256
 103              	#APP
 104              	# 177 "src/../h/riscv.hpp" 1
 178:src/../h/riscv.hpp **** 
 105              		csrs sstatus, a5
 106              	# 0 "" 2
 107              		.loc 2 178 1
 108              	#NO_APP
 109 006c 6FF09FFD 		j	.L6
 110              	.LBE81:
 111              	.LBE80:
 112              		.cfi_endproc
 113              	.LFE45:
 115              		.align	2
 116              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 118              	_ZN5Riscv20handleSupervisorTrapEv:
 119              	.LFB46:
  36:src/riscv.cpp **** 
GAS LISTING /tmp/ccLHoJv4.s 			page 7


  37:src/riscv.cpp **** void Riscv ::  handleSupervisorTrap(){
 120              		.loc 1 37 38 is_stmt 1
 121              		.cfi_startproc
 122 0070 130101F9 		addi	sp,sp,-112
 123              		.cfi_def_cfa_offset 112
 124 0074 23341106 		sd	ra,104(sp)
 125 0078 23308106 		sd	s0,96(sp)
 126 007c 233C9104 		sd	s1,88(sp)
 127 0080 23382105 		sd	s2,80(sp)
 128 0084 23343105 		sd	s3,72(sp)
 129              		.cfi_offset 1, -8
 130              		.cfi_offset 8, -16
 131              		.cfi_offset 9, -24
 132              		.cfi_offset 18, -32
 133              		.cfi_offset 19, -40
 134 0088 13040107 		addi	s0,sp,112
 135              		.cfi_def_cfa 8, 0
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****     uint64 scause = r_scause();
 136              		.loc 1 39 5
 137              	.LBB82:
 138              	.LBB83:
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 139              		.loc 2 107 5
 108:src/../h/riscv.hpp ****     return scause;
 140              		.loc 2 108 5
 108:src/../h/riscv.hpp ****     return scause;
 141              		.loc 2 108 72 is_stmt 0
 142              	#APP
 143              	# 108 "src/../h/riscv.hpp" 1
 144              		csrr a5, scause
 145              	# 0 "" 2
 146              	#NO_APP
 147 0090 2338F4FA 		sd	a5,-80(s0)
 109:src/../h/riscv.hpp **** }
 148              		.loc 2 109 5 is_stmt 1
 109:src/../h/riscv.hpp **** }
 149              		.loc 2 109 12 is_stmt 0
 150 0094 033704FB 		ld	a4,-80(s0)
 151              	.LVL3:
 152              	.LBE83:
 153              	.LBE82:
  40:src/riscv.cpp ****     uint64 volatile r;
 154              		.loc 1 40 5 is_stmt 1
  41:src/riscv.cpp ****     __asm__ volatile ("ld %0, 10 * 8(fp)" : "=r"(r));
 155              		.loc 1 41 5
 156              		.loc 1 41 53 is_stmt 0
 157              	#APP
 158              	# 41 "src/riscv.cpp" 1
  42              	
 159              		ld a5, 10 * 8(fp)
 160              	# 0 "" 2
 161              	#NO_APP
 162 009c 2334F4FC 		sd	a5,-56(s0)
  43:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 163              		.loc 1 43 5 is_stmt 1
 164              	.LBB84:
GAS LISTING /tmp/ccLHoJv4.s 			page 8


 165              		.loc 1 43 40 is_stmt 0
 166 00a0 930687FF 		addi	a3,a4,-8
 167              		.loc 1 43 5
 168 00a4 93071000 		li	a5,1
 169 00a8 63F8D702 		bleu	a3,a5,.L33
  44:src/riscv.cpp ****     {
  45:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
  46:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
  47:src/riscv.cpp ****         if(r == 0x01){
  48:src/riscv.cpp ****             //memalloc
  49:src/riscv.cpp ****             size_t arg;
  50:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(arg));
  51:src/riscv.cpp ****             MemAlloc mem = MemAlloc :: getInstance();
  52:src/riscv.cpp ****             void* b = mem.malloc(arg);
  53:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
  54:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
  55:src/riscv.cpp ****         }else if(r == 0x02){
  56:src/riscv.cpp ****             //memfree
  57:src/riscv.cpp ****             void* arg;
  58:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(arg));
  59:src/riscv.cpp ****             MemAlloc mem = MemAlloc :: getInstance();
  60:src/riscv.cpp ****             int b =mem.freemem(arg);
  61:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
  62:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
  63:src/riscv.cpp ****         }else if(r == 0x11){
  64:src/riscv.cpp ****             //threadcreate
  65:src/riscv.cpp ****             thread_t* t;
  66:src/riscv.cpp ****             void(*start_routine)(void*);
  67:src/riscv.cpp ****             void* arg;
  68:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(t));
  69:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(start_routine));
  70:src/riscv.cpp ****             __asm__ volatile ("ld %0, 13 * 8(fp)" : "=r"(arg));
  71:src/riscv.cpp ****             // pokusaj bez arg ako ne radi
  72:src/riscv.cpp ****             if(_thread :: running == nullptr){
  73:src/riscv.cpp ****                 _thread :: running = _thread ::createCoroutine(nullptr, nullptr);
  74:src/riscv.cpp ****             }
  75:src/riscv.cpp ****             *t = _thread::createCoroutine(start_routine,arg);
  76:src/riscv.cpp **** 
  77:src/riscv.cpp ****             Scheduler :: put(*t);
  78:src/riscv.cpp ****             int b = 0;
  79:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
  80:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
  81:src/riscv.cpp **** 
  82:src/riscv.cpp ****         }else if(r == 0x12){
  83:src/riscv.cpp ****             //threadexit
  84:src/riscv.cpp ****             //thread_t t;
  85:src/riscv.cpp ****             int b;
  86:src/riscv.cpp ****             if(_thread :: running == nullptr)b = -1;
  87:src/riscv.cpp ****             else{
  88:src/riscv.cpp ****                 _thread:: running->setFinished(true);
  89:src/riscv.cpp ****                 b = 0;
  90:src/riscv.cpp ****                 _thread :: dispatch();
  91:src/riscv.cpp **** 
  92:src/riscv.cpp **** 
  93:src/riscv.cpp ****             }
  94:src/riscv.cpp **** 
  95:src/riscv.cpp ****             //t->setFinished(true);
GAS LISTING /tmp/ccLHoJv4.s 			page 9


  96:src/riscv.cpp **** 
  97:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
  98:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
  99:src/riscv.cpp ****             //_thread :: dispatch();
 100:src/riscv.cpp **** 
 101:src/riscv.cpp ****         }else if(r == 0x13){
 102:src/riscv.cpp ****             //threaddispatch
 103:src/riscv.cpp ****             _thread :: dispatch();
 104:src/riscv.cpp ****             //_thread :: yield();
 105:src/riscv.cpp ****             w_sstatus(sstatus);
 106:src/riscv.cpp ****             w_sepc(sepc);
 107:src/riscv.cpp ****         }else if(r == 0x21){
 108:src/riscv.cpp ****             //semopen
 109:src/riscv.cpp **** 
 110:src/riscv.cpp ****             sem_t* s;
 111:src/riscv.cpp ****             int n;
 112:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 113:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(n));
 114:src/riscv.cpp ****             *s = new _sem(n);
 115:src/riscv.cpp ****             int b = 0;
 116:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 117:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 118:src/riscv.cpp **** 
 119:src/riscv.cpp ****         }else if(r == 0x22){
 120:src/riscv.cpp ****             //semclose
 121:src/riscv.cpp ****             sem_t s;
 122:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 123:src/riscv.cpp ****             //ugasi
 124:src/riscv.cpp ****             _sem ::freeSem(s);
 125:src/riscv.cpp ****             MemAlloc mem = MemAlloc:: getInstance();
 126:src/riscv.cpp ****             int b = mem.freemem(s);
 127:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 128:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 129:src/riscv.cpp ****         }else if(r == 0x23){
 130:src/riscv.cpp ****             //semwait povratna vrednost int
 131:src/riscv.cpp ****             sem_t s;
 132:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 133:src/riscv.cpp **** 
 134:src/riscv.cpp ****             int b =s->wait();
 135:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 136:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 137:src/riscv.cpp ****         }else if(r == 0x24){
 138:src/riscv.cpp ****             //semsignal povratna vrednost
 139:src/riscv.cpp ****             sem_t s;
 140:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 141:src/riscv.cpp ****             int b = s->signal();
 142:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 143:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 144:src/riscv.cpp ****         }else if(r == 0x31){
 145:src/riscv.cpp ****             //timesleep
 146:src/riscv.cpp ****         }else if(r == 0x41){
 147:src/riscv.cpp ****             //getc
 148:src/riscv.cpp ****             char a = __getc();
 149:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(a));
 150:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 151:src/riscv.cpp ****         }else if(r == 0x42){
 152:src/riscv.cpp ****             //putc
GAS LISTING /tmp/ccLHoJv4.s 			page 10


 153:src/riscv.cpp ****             char s;
 154:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 155:src/riscv.cpp ****             __putc(s);
 156:src/riscv.cpp ****         }else if(r == 0x43){
 157:src/riscv.cpp ****             thread_t* t;
 158:src/riscv.cpp ****             void(*start_routine)(void*);
 159:src/riscv.cpp ****             void* arg;
 160:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(t));
 161:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(start_routine));
 162:src/riscv.cpp ****             __asm__ volatile ("ld %0, 13 * 8(fp)" : "=r"(arg));
 163:src/riscv.cpp ****             // pokusaj bez arg ako ne radi
 164:src/riscv.cpp ****             *t = _thread ::createCouroutineCPP(start_routine,arg);
 165:src/riscv.cpp ****             int b = 0;
 166:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 167:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 168:src/riscv.cpp ****         }else if(r == 0x44){
 169:src/riscv.cpp ****             thread_t t;
 170:src/riscv.cpp ****             void(*start_routine)(void*);
 171:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(t));
 172:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(start_routine));
 173:src/riscv.cpp ****             //t->rasetter(start_routine);
 174:src/riscv.cpp ****         }else if(r == 0x70){
 175:src/riscv.cpp ****             //to user
 176:src/riscv.cpp ****             //Riscv ::mc_sstatus(Riscv :: SSTATUS_SPP);
 177:src/riscv.cpp ****             //__asm__ volatile ("csrw sepc, ra");
 178:src/riscv.cpp ****             //__asm__ volatile ("sret");
 179:src/riscv.cpp ****             //w_sstatus(sstatus);
 180:src/riscv.cpp ****             //mc_sstatus(1<<8);
 181:src/riscv.cpp ****             //asm volatile ("csrw sepc, %0" : : "r" (sepcV + 4));
 182:src/riscv.cpp ****             //mc_sip(SIP_SSIE);
 183:src/riscv.cpp ****             w_sstatus(sstatus);
 184:src/riscv.cpp ****             mc_sstatus(1<<8);
 185:src/riscv.cpp ****             w_sepc(sepc);
 186:src/riscv.cpp ****             mc_sip(1 << 1);
 187:src/riscv.cpp ****             return;
 188:src/riscv.cpp **** 
 189:src/riscv.cpp ****         }else if(r == 0x71){
 190:src/riscv.cpp ****             //to super
 191:src/riscv.cpp ****             Riscv ::ms_sstatus(Riscv :: SSTATUS_SPP);
 192:src/riscv.cpp ****             __asm__ volatile ("csrw sepc, ra");
 193:src/riscv.cpp ****             __asm__ volatile ("sret");
 194:src/riscv.cpp ****         }else if(r == 0x66){
 195:src/riscv.cpp ****             thread_t* handle;
 196:src/riscv.cpp ****             __asm__ volatile("mv %0,a1" : "=r"(handle));
 197:src/riscv.cpp ****             _thread ::join(handle);
 198:src/riscv.cpp **** 
 199:src/riscv.cpp ****         }
 200:src/riscv.cpp ****         w_sstatus(sstatus);
 201:src/riscv.cpp ****         w_sepc(sepc);
 202:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 203:src/riscv.cpp ****         /*uint64 volatile sepc = r_sepc() + 4;
 204:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 205:src/riscv.cpp ****         w_sstatus(sstatus);
 206:src/riscv.cpp ****         w_sepc(sepc);*/
 207:src/riscv.cpp **** 
 208:src/riscv.cpp ****     }else if(scause == 0x8000000000000009L){
 170              		.loc 1 208 11 is_stmt 1
GAS LISTING /tmp/ccLHoJv4.s 			page 11


 171 00ac 9307F0FF 		li	a5,-1
 172 00b0 9397F703 		slli	a5,a5,63
 173 00b4 93879700 		addi	a5,a5,9
 174 00b8 6304F73A 		beq	a4,a5,.L34
 209:src/riscv.cpp ****         console_handler();
 210:src/riscv.cpp ****     }else if(scause == 0x8000000000000001L){
 175              		.loc 1 210 11
 176 00bc 9307F0FF 		li	a5,-1
 177 00c0 9397F703 		slli	a5,a5,63
 178 00c4 93871700 		addi	a5,a5,1
 179 00c8 631AF71A 		bne	a4,a5,.L8
 211:src/riscv.cpp ****         mc_sip(SIP_SSIE);
 180              		.loc 1 211 9
 181              	.LVL4:
 182              	.LBB85:
 183              	.LBB86:
 160:src/../h/riscv.hpp **** }
 184              		.loc 2 160 5
 160:src/../h/riscv.hpp **** }
 185              		.loc 2 160 64 is_stmt 0
 186 00cc 93072000 		li	a5,2
 187              	#APP
 188              	# 160 "src/../h/riscv.hpp" 1
 189              		csrc sip, a5
 190              	# 0 "" 2
 191              	.LVL5:
 161:src/../h/riscv.hpp **** 
 192              		.loc 2 161 1
 193              	#NO_APP
 194 00d4 6F00801A 		j	.L8
 195              	.L33:
 196              	.LBE86:
 197              	.LBE85:
 198              	.LBB87:
  45:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 199              		.loc 1 45 9 is_stmt 1
 200              	.LBB88:
 201              	.LBB89:
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 202              		.loc 2 119 5
 120:src/../h/riscv.hpp ****     return sepc;
 203              		.loc 2 120 5
 120:src/../h/riscv.hpp ****     return sepc;
 204              		.loc 2 120 64 is_stmt 0
 205              	#APP
 206              	# 120 "src/../h/riscv.hpp" 1
 207              		csrr a5, sepc
 208              	# 0 "" 2
 209              	#NO_APP
 210 00dc 2330F4FC 		sd	a5,-64(s0)
 121:src/../h/riscv.hpp **** }
 211              		.loc 2 121 5 is_stmt 1
 121:src/../h/riscv.hpp **** }
 212              		.loc 2 121 12 is_stmt 0
 213 00e0 833704FC 		ld	a5,-64(s0)
 214              	.LBE89:
 215              	.LBE88:
GAS LISTING /tmp/ccLHoJv4.s 			page 12


  45:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 216              		.loc 1 45 41
 217 00e4 93874700 		addi	a5,a5,4
  45:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 218              		.loc 1 45 43
 219 00e8 2330F4FA 		sd	a5,-96(s0)
  46:src/riscv.cpp ****         if(r == 0x01){
 220              		.loc 1 46 9 is_stmt 1
 221              	.LBB90:
 222              	.LBB91:
 184:src/../h/riscv.hpp **** 
 185:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 186:src/../h/riscv.hpp **** {
 187:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 223              		.loc 2 187 5
 188:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 224              		.loc 2 188 5
 225              		.loc 2 188 76 is_stmt 0
 226              	#APP
 227              	# 188 "src/../h/riscv.hpp" 1
 189              	    return sstatus;
 228              		csrr a5, sstatus
 229              	# 0 "" 2
 230              	#NO_APP
 231 00f0 233CF4FA 		sd	a5,-72(s0)
 232              		.loc 2 189 5 is_stmt 1
 233              		.loc 2 189 12 is_stmt 0
 234 00f4 833784FB 		ld	a5,-72(s0)
 235              	.LBE91:
 236              	.LBE90:
  46:src/riscv.cpp ****         if(r == 0x01){
 237              		.loc 1 46 45
 238 00f8 2334F4FA 		sd	a5,-88(s0)
  47:src/riscv.cpp ****             //memalloc
 239              		.loc 1 47 9 is_stmt 1
 240              	.LBB92:
  47:src/riscv.cpp ****             //memalloc
 241              		.loc 1 47 14 is_stmt 0
 242 00fc 033784FC 		ld	a4,-56(s0)
 243              	.LVL6:
  47:src/riscv.cpp ****             //memalloc
 244              		.loc 1 47 9
 245 0100 93071000 		li	a5,1
 246 0104 630AF70C 		beq	a4,a5,.L35
 247              	.LBE92:
 248              	.LBE87:
 249              	.LBE84:
  55:src/riscv.cpp ****             //memfree
 250              		.loc 1 55 15 is_stmt 1
 251              	.LBB324:
 252              	.LBB307:
 253              	.LBB286:
 254              	.LBB93:
  55:src/riscv.cpp ****             //memfree
 255              		.loc 1 55 20 is_stmt 0
 256 0108 033784FC 		ld	a4,-56(s0)
  55:src/riscv.cpp ****             //memfree
GAS LISTING /tmp/ccLHoJv4.s 			page 13


 257              		.loc 1 55 15
 258 010c 93072000 		li	a5,2
 259 0110 6308F70E 		beq	a4,a5,.L36
 260              	.LBE93:
 261              	.LBE286:
 262              	.LBE307:
 263              	.LBE324:
  63:src/riscv.cpp ****             //threadcreate
 264              		.loc 1 63 15 is_stmt 1
 265              	.LBB325:
 266              	.LBB308:
 267              	.LBB287:
 268              	.LBB268:
 269              	.LBB94:
  63:src/riscv.cpp ****             //threadcreate
 270              		.loc 1 63 20 is_stmt 0
 271 0114 033784FC 		ld	a4,-56(s0)
  63:src/riscv.cpp ****             //threadcreate
 272              		.loc 1 63 15
 273 0118 93071001 		li	a5,17
 274 011c 6306F710 		beq	a4,a5,.L37
 275              	.LBE94:
 276              	.LBE268:
 277              	.LBE287:
 278              	.LBE308:
 279              	.LBE325:
  82:src/riscv.cpp ****             //threadexit
 280              		.loc 1 82 15 is_stmt 1
 281              	.LBB326:
 282              	.LBB309:
 283              	.LBB288:
 284              	.LBB269:
 285              	.LBB251:
 286              	.LBB95:
  82:src/riscv.cpp ****             //threadexit
 287              		.loc 1 82 20 is_stmt 0
 288 0120 033784FC 		ld	a4,-56(s0)
  82:src/riscv.cpp ****             //threadexit
 289              		.loc 1 82 15
 290 0124 93072001 		li	a5,18
 291 0128 6308F718 		beq	a4,a5,.L38
 292              	.LBE95:
 293              	.LBE251:
 294              	.LBE269:
 295              	.LBE288:
 296              	.LBE309:
 297              	.LBE326:
 101:src/riscv.cpp ****             //threaddispatch
 298              		.loc 1 101 15 is_stmt 1
 299              	.LBB327:
 300              	.LBB310:
 301              	.LBB289:
 302              	.LBB270:
 303              	.LBB252:
 304              	.LBB235:
 305              	.LBB96:
 101:src/riscv.cpp ****             //threaddispatch
GAS LISTING /tmp/ccLHoJv4.s 			page 14


 306              		.loc 1 101 20 is_stmt 0
 307 012c 033784FC 		ld	a4,-56(s0)
 101:src/riscv.cpp ****             //threaddispatch
 308              		.loc 1 101 15
 309 0130 93073001 		li	a5,19
 310 0134 630EF71A 		beq	a4,a5,.L39
 311              	.LBE96:
 312              	.LBE235:
 313              	.LBE252:
 314              	.LBE270:
 315              	.LBE289:
 316              	.LBE310:
 317              	.LBE327:
 107:src/riscv.cpp ****             //semopen
 318              		.loc 1 107 15 is_stmt 1
 319              	.LBB328:
 320              	.LBB311:
 321              	.LBB290:
 322              	.LBB271:
 323              	.LBB253:
 324              	.LBB236:
 325              	.LBB218:
 326              	.LBB97:
 107:src/riscv.cpp ****             //semopen
 327              		.loc 1 107 20 is_stmt 0
 328 0138 033784FC 		ld	a4,-56(s0)
 107:src/riscv.cpp ****             //semopen
 329              		.loc 1 107 15
 330 013c 93071002 		li	a5,33
 331 0140 6306F71C 		beq	a4,a5,.L40
 332              	.LBE97:
 333              	.LBE218:
 334              	.LBE236:
 335              	.LBE253:
 336              	.LBE271:
 337              	.LBE290:
 338              	.LBE311:
 339              	.LBE328:
 119:src/riscv.cpp ****             //semclose
 340              		.loc 1 119 15 is_stmt 1
 341              	.LBB329:
 342              	.LBB312:
 343              	.LBB291:
 344              	.LBB272:
 345              	.LBB254:
 346              	.LBB237:
 347              	.LBB219:
 348              	.LBB202:
 349              	.LBB98:
 119:src/riscv.cpp ****             //semclose
 350              		.loc 1 119 20 is_stmt 0
 351 0144 033784FC 		ld	a4,-56(s0)
 119:src/riscv.cpp ****             //semclose
 352              		.loc 1 119 15
 353 0148 93072002 		li	a5,34
 354 014c 6300F720 		beq	a4,a5,.L41
 355              	.LBE98:
GAS LISTING /tmp/ccLHoJv4.s 			page 15


 356              	.LBE202:
 357              	.LBE219:
 358              	.LBE237:
 359              	.LBE254:
 360              	.LBE272:
 361              	.LBE291:
 362              	.LBE312:
 363              	.LBE329:
 129:src/riscv.cpp ****             //semwait povratna vrednost int
 364              		.loc 1 129 15 is_stmt 1
 365              	.LBB330:
 366              	.LBB313:
 367              	.LBB292:
 368              	.LBB273:
 369              	.LBB255:
 370              	.LBB238:
 371              	.LBB220:
 372              	.LBB203:
 373              	.LBB186:
 374              	.LBB99:
 129:src/riscv.cpp ****             //semwait povratna vrednost int
 375              		.loc 1 129 20 is_stmt 0
 376 0150 033784FC 		ld	a4,-56(s0)
 129:src/riscv.cpp ****             //semwait povratna vrednost int
 377              		.loc 1 129 15
 378 0154 93073002 		li	a5,35
 379 0158 6304F722 		beq	a4,a5,.L42
 380              	.LBE99:
 381              	.LBE186:
 382              	.LBE203:
 383              	.LBE220:
 384              	.LBE238:
 385              	.LBE255:
 386              	.LBE273:
 387              	.LBE292:
 388              	.LBE313:
 389              	.LBE330:
 137:src/riscv.cpp ****             //semsignal povratna vrednost
 390              		.loc 1 137 15 is_stmt 1
 391              	.LBB331:
 392              	.LBB314:
 393              	.LBB293:
 394              	.LBB274:
 395              	.LBB256:
 396              	.LBB239:
 397              	.LBB221:
 398              	.LBB204:
 399              	.LBB187:
 400              	.LBB175:
 401              	.LBB100:
 137:src/riscv.cpp ****             //semsignal povratna vrednost
 402              		.loc 1 137 20 is_stmt 0
 403 015c 033784FC 		ld	a4,-56(s0)
 137:src/riscv.cpp ****             //semsignal povratna vrednost
 404              		.loc 1 137 15
 405 0160 93074002 		li	a5,36
 406 0164 630AF722 		beq	a4,a5,.L43
GAS LISTING /tmp/ccLHoJv4.s 			page 16


 407              	.LBE100:
 408              	.LBE175:
 409              	.LBE187:
 410              	.LBE204:
 411              	.LBE221:
 412              	.LBE239:
 413              	.LBE256:
 414              	.LBE274:
 415              	.LBE293:
 416              	.LBE314:
 417              	.LBE331:
 144:src/riscv.cpp ****             //timesleep
 418              		.loc 1 144 15 is_stmt 1
 419              	.LBB332:
 420              	.LBB315:
 421              	.LBB294:
 422              	.LBB275:
 423              	.LBB257:
 424              	.LBB240:
 425              	.LBB222:
 426              	.LBB205:
 427              	.LBB188:
 428              	.LBB176:
 429              	.LBB165:
 430              	.LBB101:
 144:src/riscv.cpp ****             //timesleep
 431              		.loc 1 144 20 is_stmt 0
 432 0168 033784FC 		ld	a4,-56(s0)
 144:src/riscv.cpp ****             //timesleep
 433              		.loc 1 144 15
 434 016c 93071003 		li	a5,49
 435 0170 630EF70E 		beq	a4,a5,.L11
 436              	.LBE101:
 437              	.LBE165:
 438              	.LBE176:
 439              	.LBE188:
 440              	.LBE205:
 441              	.LBE222:
 442              	.LBE240:
 443              	.LBE257:
 444              	.LBE275:
 445              	.LBE294:
 446              	.LBE315:
 447              	.LBE332:
 146:src/riscv.cpp ****             //getc
 448              		.loc 1 146 15 is_stmt 1
 449              	.LBB333:
 450              	.LBB316:
 451              	.LBB295:
 452              	.LBB276:
 453              	.LBB258:
 454              	.LBB241:
 455              	.LBB223:
 456              	.LBB206:
 457              	.LBB189:
 458              	.LBB177:
 459              	.LBB166:
GAS LISTING /tmp/ccLHoJv4.s 			page 17


 460              	.LBB151:
 461              	.LBB102:
 146:src/riscv.cpp ****             //getc
 462              		.loc 1 146 20 is_stmt 0
 463 0174 033784FC 		ld	a4,-56(s0)
 146:src/riscv.cpp ****             //getc
 464              		.loc 1 146 15
 465 0178 93071004 		li	a5,65
 466 017c 6308F724 		beq	a4,a5,.L44
 467              	.LBE102:
 468              	.LBE151:
 469              	.LBE166:
 470              	.LBE177:
 471              	.LBE189:
 472              	.LBE206:
 473              	.LBE223:
 474              	.LBE241:
 475              	.LBE258:
 476              	.LBE276:
 477              	.LBE295:
 478              	.LBE316:
 479              	.LBE333:
 151:src/riscv.cpp ****             //putc
 480              		.loc 1 151 15 is_stmt 1
 481              	.LBB334:
 482              	.LBB317:
 483              	.LBB296:
 484              	.LBB277:
 485              	.LBB259:
 486              	.LBB242:
 487              	.LBB224:
 488              	.LBB207:
 489              	.LBB190:
 490              	.LBB178:
 491              	.LBB167:
 492              	.LBB152:
 493              	.LBB144:
 494              	.LBB103:
 151:src/riscv.cpp ****             //putc
 495              		.loc 1 151 20 is_stmt 0
 496 0180 033784FC 		ld	a4,-56(s0)
 151:src/riscv.cpp ****             //putc
 497              		.loc 1 151 15
 498 0184 93072004 		li	a5,66
 499 0188 630CF724 		beq	a4,a5,.L45
 500              	.LBE103:
 501              	.LBE144:
 502              	.LBE152:
 503              	.LBE167:
 504              	.LBE178:
 505              	.LBE190:
 506              	.LBE207:
 507              	.LBE224:
 508              	.LBE242:
 509              	.LBE259:
 510              	.LBE277:
 511              	.LBE296:
GAS LISTING /tmp/ccLHoJv4.s 			page 18


 512              	.LBE317:
 513              	.LBE334:
 156:src/riscv.cpp ****             thread_t* t;
 514              		.loc 1 156 15 is_stmt 1
 515              	.LBB335:
 516              	.LBB318:
 517              	.LBB297:
 518              	.LBB278:
 519              	.LBB260:
 520              	.LBB243:
 521              	.LBB225:
 522              	.LBB208:
 523              	.LBB191:
 524              	.LBB179:
 525              	.LBB168:
 526              	.LBB153:
 527              	.LBB145:
 528              	.LBB137:
 529              	.LBB104:
 156:src/riscv.cpp ****             thread_t* t;
 530              		.loc 1 156 20 is_stmt 0
 531 018c 033784FC 		ld	a4,-56(s0)
 156:src/riscv.cpp ****             thread_t* t;
 532              		.loc 1 156 15
 533 0190 93073004 		li	a5,67
 534 0194 6300F726 		beq	a4,a5,.L46
 535              	.LBE104:
 536              	.LBE137:
 537              	.LBE145:
 538              	.LBE153:
 539              	.LBE168:
 540              	.LBE179:
 541              	.LBE191:
 542              	.LBE208:
 543              	.LBE225:
 544              	.LBE243:
 545              	.LBE260:
 546              	.LBE278:
 547              	.LBE297:
 548              	.LBE318:
 549              	.LBE335:
 168:src/riscv.cpp ****             thread_t t;
 550              		.loc 1 168 15 is_stmt 1
 551              	.LBB336:
 552              	.LBB319:
 553              	.LBB298:
 554              	.LBB279:
 555              	.LBB261:
 556              	.LBB244:
 557              	.LBB226:
 558              	.LBB209:
 559              	.LBB192:
 560              	.LBB180:
 561              	.LBB169:
 562              	.LBB154:
 563              	.LBB146:
 564              	.LBB138:
GAS LISTING /tmp/ccLHoJv4.s 			page 19


 565              	.LBB131:
 566              	.LBB105:
 168:src/riscv.cpp ****             thread_t t;
 567              		.loc 1 168 20 is_stmt 0
 568 0198 033784FC 		ld	a4,-56(s0)
 168:src/riscv.cpp ****             thread_t t;
 569              		.loc 1 168 15
 570 019c 93074004 		li	a5,68
 571 01a0 630EF726 		beq	a4,a5,.L47
 572              	.LBE105:
 573              	.LBE131:
 574              	.LBE138:
 575              	.LBE146:
 576              	.LBE154:
 577              	.LBE169:
 578              	.LBE180:
 579              	.LBE192:
 580              	.LBE209:
 581              	.LBE226:
 582              	.LBE244:
 583              	.LBE261:
 584              	.LBE279:
 585              	.LBE298:
 586              	.LBE319:
 587              	.LBE336:
 174:src/riscv.cpp ****             //to user
 588              		.loc 1 174 15 is_stmt 1
 589              	.LBB337:
 590              	.LBB320:
 591              	.LBB299:
 592              	.LBB280:
 593              	.LBB262:
 594              	.LBB245:
 595              	.LBB227:
 596              	.LBB210:
 597              	.LBB193:
 598              	.LBB181:
 599              	.LBB170:
 600              	.LBB155:
 601              	.LBB147:
 602              	.LBB139:
 603              	.LBB132:
 604              	.LBB126:
 605              	.LBB106:
 174:src/riscv.cpp ****             //to user
 606              		.loc 1 174 20 is_stmt 0
 607 01a4 033784FC 		ld	a4,-56(s0)
 174:src/riscv.cpp ****             //to user
 608              		.loc 1 174 15
 609 01a8 93070007 		li	a5,112
 610 01ac 630EF726 		beq	a4,a5,.L48
 611              	.LBE106:
 612              	.LBE126:
 613              	.LBE132:
 614              	.LBE139:
 615              	.LBE147:
 616              	.LBE155:
GAS LISTING /tmp/ccLHoJv4.s 			page 20


 617              	.LBE170:
 618              	.LBE181:
 619              	.LBE193:
 620              	.LBE210:
 621              	.LBE227:
 622              	.LBE245:
 623              	.LBE262:
 624              	.LBE280:
 625              	.LBE299:
 626              	.LBE320:
 627              	.LBE337:
 189:src/riscv.cpp ****             //to super
 628              		.loc 1 189 15 is_stmt 1
 629              	.LBB338:
 630              	.LBB321:
 631              	.LBB300:
 632              	.LBB281:
 633              	.LBB263:
 634              	.LBB246:
 635              	.LBB228:
 636              	.LBB211:
 637              	.LBB194:
 638              	.LBB182:
 639              	.LBB171:
 640              	.LBB156:
 641              	.LBB148:
 642              	.LBB140:
 643              	.LBB133:
 644              	.LBB127:
 645              	.LBB122:
 646              	.LBB107:
 189:src/riscv.cpp ****             //to super
 647              		.loc 1 189 20 is_stmt 0
 648 01b0 033784FC 		ld	a4,-56(s0)
 189:src/riscv.cpp ****             //to super
 649              		.loc 1 189 15
 650 01b4 93071007 		li	a5,113
 651 01b8 630AF728 		beq	a4,a5,.L49
 652              	.LBE107:
 653              	.LBE122:
 654              	.LBE127:
 655              	.LBE133:
 656              	.LBE140:
 657              	.LBE148:
 658              	.LBE156:
 659              	.LBE171:
 660              	.LBE182:
 661              	.LBE194:
 662              	.LBE211:
 663              	.LBE228:
 664              	.LBE246:
 665              	.LBE263:
 666              	.LBE281:
 667              	.LBE300:
 668              	.LBE321:
 669              	.LBE338:
 194:src/riscv.cpp ****             thread_t* handle;
GAS LISTING /tmp/ccLHoJv4.s 			page 21


 670              		.loc 1 194 15 is_stmt 1
 671              	.LBB339:
 672              	.LBB322:
 673              	.LBB301:
 674              	.LBB282:
 675              	.LBB264:
 676              	.LBB247:
 677              	.LBB229:
 678              	.LBB212:
 679              	.LBB195:
 680              	.LBB183:
 681              	.LBB172:
 682              	.LBB157:
 683              	.LBB149:
 684              	.LBB141:
 685              	.LBB134:
 686              	.LBB128:
 687              	.LBB123:
 688              	.LBB112:
 689              	.LBB108:
 194:src/riscv.cpp ****             thread_t* handle;
 690              		.loc 1 194 20 is_stmt 0
 691 01bc 033784FC 		ld	a4,-56(s0)
 194:src/riscv.cpp ****             thread_t* handle;
 692              		.loc 1 194 15
 693 01c0 93076006 		li	a5,102
 694 01c4 6314F70A 		bne	a4,a5,.L11
 695              	.LBB109:
 195:src/riscv.cpp ****             __asm__ volatile("mv %0,a1" : "=r"(handle));
 696              		.loc 1 195 13 is_stmt 1
 196:src/riscv.cpp ****             _thread ::join(handle);
 697              		.loc 1 196 13
 196:src/riscv.cpp ****             _thread ::join(handle);
 698              		.loc 1 196 56 is_stmt 0
 699              	#APP
 700              	# 196 "src/riscv.cpp" 1
 701              		mv a0,a1
 702              	# 0 "" 2
 703              	.LVL7:
 197:src/riscv.cpp **** 
 704              		.loc 1 197 13 is_stmt 1
 197:src/riscv.cpp **** 
 705              		.loc 1 197 27 is_stmt 0
 706              	#NO_APP
 707 01cc 97000000 		call	_ZN7_thread4joinEPPS_@plt
 707      E7800000 
 708              	.LVL8:
 709              	.LBE109:
 710 01d4 6F008009 		j	.L11
 711              	.LVL9:
 712              	.L35:
 713              	.LBE108:
 714              	.LBE112:
 715              	.LBE123:
 716              	.LBE128:
 717              	.LBE134:
 718              	.LBE141:
GAS LISTING /tmp/ccLHoJv4.s 			page 22


 719              	.LBE149:
 720              	.LBE157:
 721              	.LBE172:
 722              	.LBE183:
 723              	.LBE195:
 724              	.LBE212:
 725              	.LBE229:
 726              	.LBE247:
 727              	.LBE264:
 728              	.LBE282:
 729              	.LBB283:
  49:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(arg));
 730              		.loc 1 49 13 is_stmt 1
  50:src/riscv.cpp ****             MemAlloc mem = MemAlloc :: getInstance();
 731              		.loc 1 50 13
  50:src/riscv.cpp ****             MemAlloc mem = MemAlloc :: getInstance();
 732              		.loc 1 50 63 is_stmt 0
 733              	#APP
 734              	# 50 "src/riscv.cpp" 1
 735              		ld s1, 11 * 8(fp)
 736              	# 0 "" 2
 737              	.LVL10:
  51:src/riscv.cpp ****             void* b = mem.malloc(arg);
 738              		.loc 1 51 13 is_stmt 1
  51:src/riscv.cpp ****             void* b = mem.malloc(arg);
 739              		.loc 1 51 52 is_stmt 0
 740              	#NO_APP
 741 01dc 97000000 		call	_ZN8MemAlloc11getInstanceEv@plt
 741      E7800000 
 742              	.LVL11:
  52:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 743              		.loc 1 52 13 is_stmt 1
  52:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 744              		.loc 1 52 33 is_stmt 0
 745 01e4 93850400 		mv	a1,s1
 746 01e8 130584F9 		addi	a0,s0,-104
 747 01ec 97000000 		call	_ZN8MemAlloc6mallocEm@plt
 747      E7800000 
 748              	.LVL12:
  53:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 749              		.loc 1 53 13 is_stmt 1
  53:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 750              		.loc 1 53 53 is_stmt 0
 751              	#APP
 752              	# 53 "src/riscv.cpp" 1
  54:src/riscv.cpp ****         }else if(r == 0x02){
 753              		mv a0, a0
 754              	# 0 "" 2
 755              		.loc 1 54 13 is_stmt 1
  54:src/riscv.cpp ****         }else if(r == 0x02){
 756              		.loc 1 54 51 is_stmt 0
 757              	# 54 "src/riscv.cpp" 1
 758              		sd a0, 10 * 8(fp)
 759              	# 0 "" 2
 760              	#NO_APP
 761              	.LBE283:
 762 01fc 6F000007 		j	.L11
GAS LISTING /tmp/ccLHoJv4.s 			page 23


 763              	.LVL13:
 764              	.L36:
 765              	.LBB284:
 766              	.LBB265:
  57:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(arg));
 767              		.loc 1 57 13 is_stmt 1
  58:src/riscv.cpp ****             MemAlloc mem = MemAlloc :: getInstance();
 768              		.loc 1 58 13
  58:src/riscv.cpp ****             MemAlloc mem = MemAlloc :: getInstance();
 769              		.loc 1 58 63 is_stmt 0
 770              	#APP
 771              	# 58 "src/riscv.cpp" 1
 772              		ld s1, 11 * 8(fp)
 773              	# 0 "" 2
 774              	.LVL14:
  59:src/riscv.cpp ****             int b =mem.freemem(arg);
 775              		.loc 1 59 13 is_stmt 1
  59:src/riscv.cpp ****             int b =mem.freemem(arg);
 776              		.loc 1 59 52 is_stmt 0
 777              	#NO_APP
 778 0204 97000000 		call	_ZN8MemAlloc11getInstanceEv@plt
 778      E7800000 
 779              	.LVL15:
  60:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 780              		.loc 1 60 13 is_stmt 1
  60:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 781              		.loc 1 60 31 is_stmt 0
 782 020c 93850400 		mv	a1,s1
 783 0210 130584F9 		addi	a0,s0,-104
 784 0214 97000000 		call	_ZN8MemAlloc7freememEPv@plt
 784      E7800000 
 785              	.LVL16:
  61:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 786              		.loc 1 61 13 is_stmt 1
  61:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 787              		.loc 1 61 53 is_stmt 0
 788              	#APP
 789              	# 61 "src/riscv.cpp" 1
  62:src/riscv.cpp ****         }else if(r == 0x11){
 790              		mv a0, a0
 791              	# 0 "" 2
 792              		.loc 1 62 13 is_stmt 1
  62:src/riscv.cpp ****         }else if(r == 0x11){
 793              		.loc 1 62 51 is_stmt 0
 794              	# 62 "src/riscv.cpp" 1
 795              		sd a0, 10 * 8(fp)
 796              	# 0 "" 2
 797              	#NO_APP
 798              	.LBE265:
 799 0224 6F008004 		j	.L11
 800              	.LVL17:
 801              	.L37:
 802              	.LBB266:
 803              	.LBB248:
  65:src/riscv.cpp ****             void(*start_routine)(void*);
 804              		.loc 1 65 13 is_stmt 1
  66:src/riscv.cpp ****             void* arg;
GAS LISTING /tmp/ccLHoJv4.s 			page 24


 805              		.loc 1 66 13
  67:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(t));
 806              		.loc 1 67 13
  68:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(start_routine));
 807              		.loc 1 68 13
  68:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(start_routine));
 808              		.loc 1 68 61 is_stmt 0
 809              	#APP
 810              	# 68 "src/riscv.cpp" 1
 811              		ld s1, 11 * 8(fp)
 812              	# 0 "" 2
 813              	.LVL18:
  69:src/riscv.cpp ****             __asm__ volatile ("ld %0, 13 * 8(fp)" : "=r"(arg));
 814              		.loc 1 69 13 is_stmt 1
  69:src/riscv.cpp ****             __asm__ volatile ("ld %0, 13 * 8(fp)" : "=r"(arg));
 815              		.loc 1 69 73 is_stmt 0
 816              	# 69 "src/riscv.cpp" 1
 817              		ld s2, 12 * 8(fp)
 818              	# 0 "" 2
 819              	.LVL19:
  70:src/riscv.cpp ****             // pokusaj bez arg ako ne radi
 820              		.loc 1 70 13 is_stmt 1
  70:src/riscv.cpp ****             // pokusaj bez arg ako ne radi
 821              		.loc 1 70 63 is_stmt 0
 822              	# 70 "src/riscv.cpp" 1
 823              		ld s3, 13 * 8(fp)
 824              	# 0 "" 2
 825              	.LVL20:
  72:src/riscv.cpp ****                 _thread :: running = _thread ::createCoroutine(nullptr, nullptr);
 826              		.loc 1 72 13 is_stmt 1
  72:src/riscv.cpp ****                 _thread :: running = _thread ::createCoroutine(nullptr, nullptr);
 827              		.loc 1 72 35 is_stmt 0
 828              	#NO_APP
 829 0234 97070000 		la	a5,_ZN7_thread7runningE
 829      83B70700 
 830 023c 83B70700 		ld	a5,0(a5)
  72:src/riscv.cpp ****                 _thread :: running = _thread ::createCoroutine(nullptr, nullptr);
 831              		.loc 1 72 13
 832 0240 638C0704 		beqz	a5,.L50
 833              	.LVL21:
 834              	.L14:
  75:src/riscv.cpp **** 
 835              		.loc 1 75 13 is_stmt 1
  75:src/riscv.cpp **** 
 836              		.loc 1 75 42 is_stmt 0
 837 0244 93850900 		mv	a1,s3
 838 0248 13050900 		mv	a0,s2
 839 024c 97000000 		call	_ZN7_thread15createCoroutineEPFvPvES0_@plt
 839      E7800000 
 840              	.LVL22:
  75:src/riscv.cpp **** 
 841              		.loc 1 75 16
 842 0254 23B0A400 		sd	a0,0(s1)
  77:src/riscv.cpp ****             int b = 0;
 843              		.loc 1 77 13 is_stmt 1
  77:src/riscv.cpp ****             int b = 0;
 844              		.loc 1 77 29 is_stmt 0
GAS LISTING /tmp/ccLHoJv4.s 			page 25


 845 0258 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 845      E7800000 
 846              	.LVL23:
  78:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 847              		.loc 1 78 13 is_stmt 1
  79:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 848              		.loc 1 79 13
  79:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 849              		.loc 1 79 53 is_stmt 0
 850 0260 93070000 		li	a5,0
 851              	#APP
 852              	# 79 "src/riscv.cpp" 1
  80:src/riscv.cpp **** 
 853              		mv a0, a5
 854              	# 0 "" 2
 855              		.loc 1 80 13 is_stmt 1
  80:src/riscv.cpp **** 
 856              		.loc 1 80 51 is_stmt 0
 857              	# 80 "src/riscv.cpp" 1
 858              		sd a0, 10 * 8(fp)
 859              	# 0 "" 2
 860              	.LVL24:
 861              	#NO_APP
 862              	.L11:
 863              	.LBE248:
 864              	.LBE266:
 865              	.LBE284:
 866              	.LBE301:
 200:src/riscv.cpp ****         w_sepc(sepc);
 867              		.loc 1 200 9 is_stmt 1
 200:src/riscv.cpp ****         w_sepc(sepc);
 868              		.loc 1 200 18 is_stmt 0
 869 026c 833784FA 		ld	a5,-88(s0)
 870              	.LVL25:
 871              	.LBB302:
 872              	.LBB303:
 190:src/../h/riscv.hpp **** }
 191:src/../h/riscv.hpp **** 
 192:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 193:src/../h/riscv.hpp **** {
 194:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 873              		.loc 2 194 5 is_stmt 1
 874              		.loc 2 194 77 is_stmt 0
 875              	#APP
 876              	# 194 "src/../h/riscv.hpp" 1
 195              	}
 877              		csrw sstatus, a5
 878              	# 0 "" 2
 879              	.LVL26:
 880              	#NO_APP
 881              	.LBE303:
 882              	.LBE302:
 201:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 883              		.loc 1 201 9 is_stmt 1
 201:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 884              		.loc 1 201 15 is_stmt 0
 885 0274 833704FA 		ld	a5,-96(s0)
GAS LISTING /tmp/ccLHoJv4.s 			page 26


 886              	.LVL27:
 887              	.LBB304:
 888              	.LBB305:
 126:src/../h/riscv.hpp **** }
 889              		.loc 2 126 5 is_stmt 1
 126:src/../h/riscv.hpp **** }
 890              		.loc 2 126 65 is_stmt 0
 891              	#APP
 892              	# 126 "src/../h/riscv.hpp" 1
 893              		csrw sepc, a5
 894              	# 0 "" 2
 895              	.LVL28:
 896              	#NO_APP
 897              	.L8:
 898              	.LBE305:
 899              	.LBE304:
 900              	.LBE322:
 901              	.LBE339:
 212:src/riscv.cpp **** 
 213:src/riscv.cpp ****     }
 214:src/riscv.cpp **** 
 215:src/riscv.cpp **** 
 216:src/riscv.cpp **** 
 217:src/riscv.cpp **** }...
 902              		.loc 1 217 1
 903 027c 83308106 		ld	ra,104(sp)
 904              		.cfi_remember_state
 905              		.cfi_restore 1
 906 0280 03340106 		ld	s0,96(sp)
 907              		.cfi_restore 8
 908              		.cfi_def_cfa 2, 112
 909 0284 83348105 		ld	s1,88(sp)
 910              		.cfi_restore 9
 911 0288 03390105 		ld	s2,80(sp)
 912              		.cfi_restore 18
 913 028c 83398104 		ld	s3,72(sp)
 914              		.cfi_restore 19
 915 0290 13010107 		addi	sp,sp,112
 916              		.cfi_def_cfa_offset 0
 917 0294 67800000 		jr	ra
 918              	.LVL29:
 919              	.L50:
 920              		.cfi_restore_state
 921              	.LBB340:
 922              	.LBB323:
 923              	.LBB306:
 924              	.LBB285:
 925              	.LBB267:
 926              	.LBB249:
  73:src/riscv.cpp ****                 _thread :: running = _thread ::createCoroutine(nullptr, nullptr);
 927              		.loc 1 73 17 is_stmt 1
  73:src/riscv.cpp ****                 _thread :: running = _thread ::createCoroutine(nullptr, nullptr);
 928              		.loc 1 73 63 is_stmt 0
 929 0298 93050000 		li	a1,0
 930 029c 13050000 		li	a0,0
 931 02a0 97000000 		call	_ZN7_thread15createCoroutineEPFvPvES0_@plt
 931      E7800000 
GAS LISTING /tmp/ccLHoJv4.s 			page 27


 932              	.LVL30:
  73:src/riscv.cpp ****                 _thread :: running = _thread ::createCoroutine(nullptr, nullptr);
 933              		.loc 1 73 36
 934 02a8 97070000 		la	a5,_ZN7_thread7runningE
 934      83B70700 
 935 02b0 23B0A700 		sd	a0,0(a5)
 936 02b4 6FF01FF9 		j	.L14
 937              	.LVL31:
 938              	.L38:
 939              	.LBE249:
 940              	.LBB250:
 941              	.LBB230:
  85:src/riscv.cpp ****             int b;
 942              		.loc 1 85 13 is_stmt 1
  86:src/riscv.cpp ****             if(_thread :: running == nullptr)b = -1;
 943              		.loc 1 86 13
  86:src/riscv.cpp ****             if(_thread :: running == nullptr)b = -1;
 944              		.loc 1 86 35 is_stmt 0
 945 02b8 97070000 		la	a5,_ZN7_thread7runningE
 945      83B70700 
 946 02c0 83B70700 		ld	a5,0(a5)
  86:src/riscv.cpp ****             if(_thread :: running == nullptr)b = -1;
 947              		.loc 1 86 13
 948 02c4 63820702 		beqz	a5,.L31
  88:src/riscv.cpp ****                 _thread:: running->setFinished(true);
 949              		.loc 1 88 17 is_stmt 1
 950              	.LVL32:
 951              	.LBB231:
 952              	.LBB232:
 953              		.file 3 "src/../h/ccb.hpp"
   1:src/../h/ccb.hpp **** //
   2:src/../h/ccb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/ccb.hpp **** //
   4:src/../h/ccb.hpp **** 
   5:src/../h/ccb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_CCB_HPP
   6:src/../h/ccb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_CCB_HPP
   7:src/../h/ccb.hpp **** 
   8:src/../h/ccb.hpp **** #include "../lib/hw.h"
   9:src/../h/ccb.hpp **** #include "scheduler.hpp"
  10:src/../h/ccb.hpp **** 
  11:src/../h/ccb.hpp **** //#include "../h/_sem.hpp"
  12:src/../h/ccb.hpp **** 
  13:src/../h/ccb.hpp **** // Coroutine Control Block
  14:src/../h/ccb.hpp **** class  _thread
  15:src/../h/ccb.hpp **** {
  16:src/../h/ccb.hpp **** public:
  17:src/../h/ccb.hpp **** 
  18:src/../h/ccb.hpp ****     //novo
  19:src/../h/ccb.hpp ****     static void join(thread_t* handle);
  20:src/../h/ccb.hpp ****     bool isblk(){return blk;}
  21:src/../h/ccb.hpp ****     void setblk(bool val){blk = val;}
  22:src/../h/ccb.hpp ****     uint64 retID(){return this->id;}
  23:src/../h/ccb.hpp ****     static void dispatch();
  24:src/../h/ccb.hpp **** 
  25:src/../h/ccb.hpp ****     ~ _thread() { delete[] stack; }
  26:src/../h/ccb.hpp **** 
  27:src/../h/ccb.hpp ****     bool isFinished() const { return finished; }
GAS LISTING /tmp/ccLHoJv4.s 			page 28


  28:src/../h/ccb.hpp **** 
  29:src/../h/ccb.hpp **** 
  30:src/../h/ccb.hpp **** 
  31:src/../h/ccb.hpp ****     void setFinished(bool value) { finished = value; }
 954              		.loc 3 31 36
 955              		.loc 3 31 45 is_stmt 0
 956 02c8 13071000 		li	a4,1
 957 02cc 2380E704 		sb	a4,64(a5)
 958              	.LVL33:
 959              	.LBE232:
 960              	.LBE231:
  89:src/riscv.cpp ****                 b = 0;
 961              		.loc 1 89 17 is_stmt 1
  90:src/riscv.cpp ****                 _thread :: dispatch();
 962              		.loc 1 90 17
  90:src/riscv.cpp ****                 _thread :: dispatch();
 963              		.loc 1 90 36 is_stmt 0
 964 02d0 97000000 		call	_ZN7_thread8dispatchEv@plt
 964      E7800000 
 965              	.LVL34:
  89:src/riscv.cpp ****                 b = 0;
 966              		.loc 1 89 19
 967 02d8 93070000 		li	a5,0
 968              	.LVL35:
 969              	.L16:
  97:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 970              		.loc 1 97 13 is_stmt 1
  97:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 971              		.loc 1 97 53 is_stmt 0
 972              	#APP
 973              	# 97 "src/riscv.cpp" 1
  98:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 974              		mv a0, a5
 975              	# 0 "" 2
 976              		.loc 1 98 13 is_stmt 1
  98:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 977              		.loc 1 98 51 is_stmt 0
 978              	# 98 "src/riscv.cpp" 1
 979              		sd a0, 10 * 8(fp)
 980              	# 0 "" 2
 981              	#NO_APP
 982              	.LBE230:
 983 02e4 6FF09FF8 		j	.L11
 984              	.LVL36:
 985              	.L31:
 986              	.LBB233:
  86:src/riscv.cpp ****             if(_thread :: running == nullptr)b = -1;
 987              		.loc 1 86 48
 988 02e8 9307F0FF 		li	a5,-1
 989 02ec 6FF01FFF 		j	.L16
 990              	.L39:
 991              	.LBE233:
 992              	.LBB234:
 103:src/riscv.cpp ****             _thread :: dispatch();
 993              		.loc 1 103 13 is_stmt 1
 103:src/riscv.cpp ****             _thread :: dispatch();
 994              		.loc 1 103 32 is_stmt 0
GAS LISTING /tmp/ccLHoJv4.s 			page 29


 995 02f0 97000000 		call	_ZN7_thread8dispatchEv@plt
 995      E7800000 
 996              	.LVL37:
 105:src/riscv.cpp ****             w_sstatus(sstatus);
 997              		.loc 1 105 13 is_stmt 1
 105:src/riscv.cpp ****             w_sstatus(sstatus);
 998              		.loc 1 105 22 is_stmt 0
 999 02f8 833784FA 		ld	a5,-88(s0)
 1000              	.LVL38:
 1001              	.LBB213:
 1002              	.LBB214:
 194:src/../h/riscv.hpp **** }
 1003              		.loc 2 194 5 is_stmt 1
 194:src/../h/riscv.hpp **** }
 1004              		.loc 2 194 77 is_stmt 0
 1005              	#APP
 1006              	# 194 "src/../h/riscv.hpp" 1
 1007              		csrw sstatus, a5
 1008              	# 0 "" 2
 1009              	.LVL39:
 1010              	#NO_APP
 1011              	.LBE214:
 1012              	.LBE213:
 106:src/riscv.cpp ****             w_sepc(sepc);
 1013              		.loc 1 106 13 is_stmt 1
 106:src/riscv.cpp ****             w_sepc(sepc);
 1014              		.loc 1 106 19 is_stmt 0
 1015 0300 833704FA 		ld	a5,-96(s0)
 1016              	.LVL40:
 1017              	.LBB215:
 1018              	.LBB216:
 126:src/../h/riscv.hpp **** }
 1019              		.loc 2 126 5 is_stmt 1
 126:src/../h/riscv.hpp **** }
 1020              		.loc 2 126 65 is_stmt 0
 1021              	#APP
 1022              	# 126 "src/../h/riscv.hpp" 1
 127:src/../h/riscv.hpp **** 
 1023              		csrw sepc, a5
 1024              	# 0 "" 2
 1025              		.loc 2 127 1
 1026              	#NO_APP
 1027 0308 6FF05FF6 		j	.L11
 1028              	.LVL41:
 1029              	.L40:
 1030              	.LBE216:
 1031              	.LBE215:
 1032              	.LBB217:
 1033              	.LBB196:
 110:src/riscv.cpp ****             sem_t* s;
 1034              		.loc 1 110 13 is_stmt 1
 111:src/riscv.cpp ****             int n;
 1035              		.loc 1 111 13
 112:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1036              		.loc 1 112 13
 112:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1037              		.loc 1 112 61 is_stmt 0
GAS LISTING /tmp/ccLHoJv4.s 			page 30


 1038              	#APP
 1039              	# 112 "src/riscv.cpp" 1
 1040              		ld s1, 11 * 8(fp)
 1041              	# 0 "" 2
 1042              	.LVL42:
 113:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(n));
 1043              		.loc 1 113 13 is_stmt 1
 113:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(n));
 1044              		.loc 1 113 61 is_stmt 0
 1045              	# 113 "src/riscv.cpp" 1
 1046              		ld s2, 12 * 8(fp)
 1047              	# 0 "" 2
 1048              	.LVL43:
 114:src/riscv.cpp ****             *s = new _sem(n);
 1049              		.loc 1 114 13 is_stmt 1
 114:src/riscv.cpp ****             *s = new _sem(n);
 1050              		.loc 1 114 28 is_stmt 0
 1051              	#NO_APP
 1052 0314 13058002 		li	a0,40
 1053 0318 97000000 		call	_Znwm@plt
 1053      E7800000 
 1054              	.LVL44:
 1055              	.LBB197:
 1056              	.LBB198:
 1057              		.file 4 "src/../h/_sem.hpp"
   1:src/../h/_sem.hpp **** //
   2:src/../h/_sem.hpp **** // Created by os on 2/9/23.
   3:src/../h/_sem.hpp **** //
   4:src/../h/_sem.hpp **** 
   5:src/../h/_sem.hpp **** #ifndef BASE__SEM_H
   6:src/../h/_sem.hpp **** #define BASE__SEM_H
   7:src/../h/_sem.hpp **** 
   8:src/../h/_sem.hpp **** #include "../h/list.hpp"
   9:src/../h/_sem.hpp **** //#include "../h/scheduler.hpp"
  10:src/../h/_sem.hpp **** #include"../h/ccb.hpp"
  11:src/../h/_sem.hpp **** 
  12:src/../h/_sem.hpp **** 
  13:src/../h/_sem.hpp **** 
  14:src/../h/_sem.hpp **** typedef _thread* thread_t;
  15:src/../h/_sem.hpp **** 
  16:src/../h/_sem.hpp **** 
  17:src/../h/_sem.hpp **** 
  18:src/../h/_sem.hpp **** class _sem{
  19:src/../h/_sem.hpp **** private:
  20:src/../h/_sem.hpp ****     int value;
  21:src/../h/_sem.hpp ****     List<_thread> queue;
  22:src/../h/_sem.hpp ****     int status;//pokazuje da li je semafor vec gasen to jest freeSem ili ne
  23:src/../h/_sem.hpp **** public:
  24:src/../h/_sem.hpp ****     static _sem* createSem(int n);
  25:src/../h/_sem.hpp **** 
  26:src/../h/_sem.hpp ****     _sem(int b): value(b), status(1) {}
 1058              		.loc 4 26 36
 1059 0320 23202501 		sw	s2,0(a0)
 1060              	.LVL45:
 1061              	.LBB199:
 1062              	.LBB200:
 1063              		.file 5 "src/../h/list.hpp"
GAS LISTING /tmp/ccLHoJv4.s 			page 31


   1:src/../h/list.hpp **** //
   2:src/../h/list.hpp **** // Created by marko on 20.4.22..
   3:src/../h/list.hpp **** //
   4:src/../h/list.hpp **** 
   5:src/../h/list.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_LIST_HPP
   6:src/../h/list.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_LIST_HPP
   7:src/../h/list.hpp **** 
   8:src/../h/list.hpp **** template<typename T>
   9:src/../h/list.hpp **** class List
  10:src/../h/list.hpp **** {
  11:src/../h/list.hpp **** private:
  12:src/../h/list.hpp ****     struct Elem
  13:src/../h/list.hpp ****     {
  14:src/../h/list.hpp ****         T *data;
  15:src/../h/list.hpp ****         Elem *next;
  16:src/../h/list.hpp **** 
  17:src/../h/list.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  18:src/../h/list.hpp ****     };
  19:src/../h/list.hpp **** 
  20:src/../h/list.hpp ****     Elem *head, *tail;
  21:src/../h/list.hpp **** 
  22:src/../h/list.hpp **** public:
  23:src/../h/list.hpp ****     List() : head(0), tail(0) {}
 1064              		.loc 5 23 29
 1065 0324 23340500 		sd	zero,8(a0)
 1066 0328 23380500 		sd	zero,16(a0)
 1067              	.LVL46:
 1068              	.LBE200:
 1069              	.LBE199:
 1070              		.loc 4 26 36
 1071 032c 93071000 		li	a5,1
 1072 0330 232CF500 		sw	a5,24(a0)
 1073 0334 23300502 		sd	zero,32(a0)
 1074              	.LVL47:
 1075              	.LBE198:
 1076              	.LBE197:
 114:src/riscv.cpp ****             *s = new _sem(n);
 1077              		.loc 1 114 16
 1078 0338 23B0A400 		sd	a0,0(s1)
 115:src/riscv.cpp ****             int b = 0;
 1079              		.loc 1 115 13 is_stmt 1
 1080              	.LVL48:
 116:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1081              		.loc 1 116 13
 116:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1082              		.loc 1 116 53 is_stmt 0
 1083 033c 93070000 		li	a5,0
 1084              	#APP
 1085              	# 116 "src/riscv.cpp" 1
 117:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1086              		mv a0, a5
 1087              	# 0 "" 2
 1088              		.loc 1 117 13 is_stmt 1
 117:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1089              		.loc 1 117 51 is_stmt 0
 1090              	# 117 "src/riscv.cpp" 1
 1091              		sd a0, 10 * 8(fp)
GAS LISTING /tmp/ccLHoJv4.s 			page 32


 1092              	# 0 "" 2
 1093              	#NO_APP
 1094              	.LBE196:
 1095 0348 6FF05FF2 		j	.L11
 1096              	.LVL49:
 1097              	.L41:
 1098              	.LBB201:
 1099              	.LBB184:
 121:src/riscv.cpp ****             sem_t s;
 1100              		.loc 1 121 13 is_stmt 1
 122:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1101              		.loc 1 122 13
 122:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1102              		.loc 1 122 61 is_stmt 0
 1103              	#APP
 1104              	# 122 "src/riscv.cpp" 1
 1105              		ld s1, 11 * 8(fp)
 1106              	# 0 "" 2
 1107              	.LVL50:
 124:src/riscv.cpp ****             _sem ::freeSem(s);
 1108              		.loc 1 124 13 is_stmt 1
 124:src/riscv.cpp ****             _sem ::freeSem(s);
 1109              		.loc 1 124 27 is_stmt 0
 1110              	#NO_APP
 1111 0350 13850400 		mv	a0,s1
 1112 0354 97000000 		call	_ZN4_sem7freeSemEPS_@plt
 1112      E7800000 
 1113              	.LVL51:
 125:src/riscv.cpp ****             MemAlloc mem = MemAlloc:: getInstance();
 1114              		.loc 1 125 13 is_stmt 1
 125:src/riscv.cpp ****             MemAlloc mem = MemAlloc:: getInstance();
 1115              		.loc 1 125 51 is_stmt 0
 1116 035c 97000000 		call	_ZN8MemAlloc11getInstanceEv@plt
 1116      E7800000 
 1117              	.LVL52:
 126:src/riscv.cpp ****             int b = mem.freemem(s);
 1118              		.loc 1 126 13 is_stmt 1
 126:src/riscv.cpp ****             int b = mem.freemem(s);
 1119              		.loc 1 126 32 is_stmt 0
 1120 0364 93850400 		mv	a1,s1
 1121 0368 130584F9 		addi	a0,s0,-104
 1122 036c 97000000 		call	_ZN8MemAlloc7freememEPv@plt
 1122      E7800000 
 1123              	.LVL53:
 127:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1124              		.loc 1 127 13 is_stmt 1
 127:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1125              		.loc 1 127 53 is_stmt 0
 1126              	#APP
 1127              	# 127 "src/riscv.cpp" 1
 128:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1128              		mv a0, a0
 1129              	# 0 "" 2
 1130              		.loc 1 128 13 is_stmt 1
 128:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1131              		.loc 1 128 51 is_stmt 0
 1132              	# 128 "src/riscv.cpp" 1
GAS LISTING /tmp/ccLHoJv4.s 			page 33


 1133              		sd a0, 10 * 8(fp)
 1134              	# 0 "" 2
 1135              	#NO_APP
 1136              	.LBE184:
 1137 037c 6FF01FEF 		j	.L11
 1138              	.LVL54:
 1139              	.L42:
 1140              	.LBB185:
 1141              	.LBB173:
 131:src/riscv.cpp ****             sem_t s;
 1142              		.loc 1 131 13 is_stmt 1
 132:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1143              		.loc 1 132 13
 132:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1144              		.loc 1 132 61 is_stmt 0
 1145              	#APP
 1146              	# 132 "src/riscv.cpp" 1
 1147              		ld a0, 11 * 8(fp)
 1148              	# 0 "" 2
 1149              	.LVL55:
 134:src/riscv.cpp ****             int b =s->wait();
 1150              		.loc 1 134 13 is_stmt 1
 134:src/riscv.cpp ****             int b =s->wait();
 1151              		.loc 1 134 27 is_stmt 0
 1152              	#NO_APP
 1153 0384 97000000 		call	_ZN4_sem4waitEv@plt
 1153      E7800000 
 1154              	.LVL56:
 135:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1155              		.loc 1 135 13 is_stmt 1
 135:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1156              		.loc 1 135 53 is_stmt 0
 1157              	#APP
 1158              	# 135 "src/riscv.cpp" 1
 136:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1159              		mv a0, a0
 1160              	# 0 "" 2
 1161              		.loc 1 136 13 is_stmt 1
 136:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1162              		.loc 1 136 51 is_stmt 0
 1163              	# 136 "src/riscv.cpp" 1
 1164              		sd a0, 10 * 8(fp)
 1165              	# 0 "" 2
 1166              	#NO_APP
 1167              	.LBE173:
 1168 0394 6FF09FED 		j	.L11
 1169              	.LVL57:
 1170              	.L43:
 1171              	.LBB174:
 1172              	.LBB158:
 139:src/riscv.cpp ****             sem_t s;
 1173              		.loc 1 139 13 is_stmt 1
 140:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1174              		.loc 1 140 13
 140:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1175              		.loc 1 140 61 is_stmt 0
 1176              	#APP
GAS LISTING /tmp/ccLHoJv4.s 			page 34


 1177              	# 140 "src/riscv.cpp" 1
 1178              		ld a0, 11 * 8(fp)
 1179              	# 0 "" 2
 1180              	.LVL58:
 141:src/riscv.cpp ****             int b = s->signal();
 1181              		.loc 1 141 13 is_stmt 1
 1182              	#NO_APP
 1183              	.LBB159:
 1184              	.LBB160:
  27:src/../h/_sem.hpp ****     static int freeSem(_sem* hndl);
  28:src/../h/_sem.hpp **** 
  29:src/../h/_sem.hpp ****     int wait();
  30:src/../h/_sem.hpp **** 
  31:src/../h/_sem.hpp ****     int signal(){
  32:src/../h/_sem.hpp ****         if(++value <= 0 )deblock();
 1185              		.loc 4 32 9
 1186              		.loc 4 32 14 is_stmt 0
 1187 039c 83270500 		lw	a5,0(a0)
 1188              		.loc 4 32 12
 1189 03a0 9B871700 		addiw	a5,a5,1
 1190 03a4 1B870700 		sext.w	a4,a5
 1191              		.loc 4 32 20
 1192 03a8 2320F500 		sw	a5,0(a0)
 1193              		.loc 4 32 9
 1194 03ac 635AE000 		blez	a4,.L51
 1195              	.LVL59:
 1196              	.L22:
  33:src/../h/_sem.hpp ****         return 1;
 1197              		.loc 4 33 9 is_stmt 1
 1198              	.LBE160:
 1199              	.LBE159:
 142:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1200              		.loc 1 142 13
 142:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1201              		.loc 1 142 53 is_stmt 0
 1202 03b0 93071000 		li	a5,1
 1203              	#APP
 1204              	# 142 "src/riscv.cpp" 1
 143:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1205              		mv a0, a5
 1206              	# 0 "" 2
 1207              		.loc 1 143 13 is_stmt 1
 143:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1208              		.loc 1 143 51 is_stmt 0
 1209              	# 143 "src/riscv.cpp" 1
 1210              		sd a0, 10 * 8(fp)
 1211              	# 0 "" 2
 1212              	#NO_APP
 1213              	.LBE158:
 1214 03bc 6FF01FEB 		j	.L11
 1215              	.LVL60:
 1216              	.L51:
 1217              	.LBB163:
 1218              	.LBB162:
 1219              	.LBB161:
  32:src/../h/_sem.hpp ****         return 1;
 1220              		.loc 4 32 26 is_stmt 1
GAS LISTING /tmp/ccLHoJv4.s 			page 35


  32:src/../h/_sem.hpp ****         return 1;
 1221              		.loc 4 32 33 is_stmt 0
 1222 03c0 97000000 		call	_ZN4_sem7deblockEv@plt
 1222      E7800000 
 1223              	.LVL61:
 1224 03c8 6FF09FFE 		j	.L22
 1225              	.LVL62:
 1226              	.L44:
 1227              	.LBE161:
 1228              	.LBE162:
 1229              	.LBE163:
 1230              	.LBB164:
 1231              	.LBB150:
 1232              	.LBB142:
 148:src/riscv.cpp ****             char a = __getc();
 1233              		.loc 1 148 13 is_stmt 1
 148:src/riscv.cpp ****             char a = __getc();
 1234              		.loc 1 148 28 is_stmt 0
 1235 03cc 97000000 		call	__getc@plt
 1235      E7800000 
 1236              	.LVL63:
 149:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(a));
 1237              		.loc 1 149 13 is_stmt 1
 149:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(a));
 1238              		.loc 1 149 53 is_stmt 0
 1239              	#APP
 1240              	# 149 "src/riscv.cpp" 1
 150:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1241              		mv a0, a0
 1242              	# 0 "" 2
 1243              		.loc 1 150 13 is_stmt 1
 150:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1244              		.loc 1 150 51 is_stmt 0
 1245              	# 150 "src/riscv.cpp" 1
 1246              		sd a0, 10 * 8(fp)
 1247              	# 0 "" 2
 1248              	#NO_APP
 1249              	.LBE142:
 1250 03dc 6FF01FE9 		j	.L11
 1251              	.LVL64:
 1252              	.L45:
 1253              	.LBB143:
 1254              	.LBB135:
 153:src/riscv.cpp ****             char s;
 1255              		.loc 1 153 13 is_stmt 1
 154:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1256              		.loc 1 154 13
 154:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(s));
 1257              		.loc 1 154 61 is_stmt 0
 1258              	#APP
 1259              	# 154 "src/riscv.cpp" 1
 1260              		ld a0, 11 * 8(fp)
 1261              	# 0 "" 2
 1262              	.LVL65:
 155:src/riscv.cpp ****             __putc(s);
 1263              		.loc 1 155 13 is_stmt 1
 155:src/riscv.cpp ****             __putc(s);
GAS LISTING /tmp/ccLHoJv4.s 			page 36


 1264              		.loc 1 155 19 is_stmt 0
 1265              	#NO_APP
 1266 03e4 1375F50F 		andi	a0,a0,0xff
 1267 03e8 97000000 		call	__putc@plt
 1267      E7800000 
 1268              	.LVL66:
 1269              	.LBE135:
 1270 03f0 6FF0DFE7 		j	.L11
 1271              	.LVL67:
 1272              	.L46:
 1273              	.LBB136:
 1274              	.LBB129:
 157:src/riscv.cpp ****             thread_t* t;
 1275              		.loc 1 157 13 is_stmt 1
 158:src/riscv.cpp ****             void(*start_routine)(void*);
 1276              		.loc 1 158 13
 159:src/riscv.cpp ****             void* arg;
 1277              		.loc 1 159 13
 160:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(t));
 1278              		.loc 1 160 13
 160:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(t));
 1279              		.loc 1 160 61 is_stmt 0
 1280              	#APP
 1281              	# 160 "src/riscv.cpp" 1
 1282              		ld s1, 11 * 8(fp)
 1283              	# 0 "" 2
 1284              	.LVL68:
 161:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(start_routine));
 1285              		.loc 1 161 13 is_stmt 1
 161:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(start_routine));
 1286              		.loc 1 161 73 is_stmt 0
 1287              	# 161 "src/riscv.cpp" 1
 1288              		ld a0, 12 * 8(fp)
 1289              	# 0 "" 2
 1290              	.LVL69:
 162:src/riscv.cpp ****             __asm__ volatile ("ld %0, 13 * 8(fp)" : "=r"(arg));
 1291              		.loc 1 162 13 is_stmt 1
 162:src/riscv.cpp ****             __asm__ volatile ("ld %0, 13 * 8(fp)" : "=r"(arg));
 1292              		.loc 1 162 63 is_stmt 0
 1293              	# 162 "src/riscv.cpp" 1
 1294              		ld a1, 13 * 8(fp)
 1295              	# 0 "" 2
 1296              	.LVL70:
 164:src/riscv.cpp ****             *t = _thread ::createCouroutineCPP(start_routine,arg);
 1297              		.loc 1 164 13 is_stmt 1
 164:src/riscv.cpp ****             *t = _thread ::createCouroutineCPP(start_routine,arg);
 1298              		.loc 1 164 47 is_stmt 0
 1299              	#NO_APP
 1300 0400 97000000 		call	_ZN7_thread19createCouroutineCPPEPFvPvES0_@plt
 1300      E7800000 
 1301              	.LVL71:
 164:src/riscv.cpp ****             *t = _thread ::createCouroutineCPP(start_routine,arg);
 1302              		.loc 1 164 16
 1303 0408 23B0A400 		sd	a0,0(s1)
 165:src/riscv.cpp ****             int b = 0;
 1304              		.loc 1 165 13 is_stmt 1
 1305              	.LVL72:
GAS LISTING /tmp/ccLHoJv4.s 			page 37


 166:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1306              		.loc 1 166 13
 166:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r"(b));
 1307              		.loc 1 166 53 is_stmt 0
 1308 040c 93070000 		li	a5,0
 1309              	#APP
 1310              	# 166 "src/riscv.cpp" 1
 167:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1311              		mv a0, a5
 1312              	# 0 "" 2
 1313              		.loc 1 167 13 is_stmt 1
 167:src/riscv.cpp ****             __asm__ volatile ("sd a0, 10 * 8(fp)");
 1314              		.loc 1 167 51 is_stmt 0
 1315              	# 167 "src/riscv.cpp" 1
 1316              		sd a0, 10 * 8(fp)
 1317              	# 0 "" 2
 1318              	#NO_APP
 1319              	.LBE129:
 1320 0418 6FF05FE5 		j	.L11
 1321              	.LVL73:
 1322              	.L47:
 1323              	.LBB130:
 1324              	.LBB124:
 169:src/riscv.cpp ****             thread_t t;
 1325              		.loc 1 169 13 is_stmt 1
 170:src/riscv.cpp ****             void(*start_routine)(void*);
 1326              		.loc 1 170 13
 171:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(t));
 1327              		.loc 1 171 13
 171:src/riscv.cpp ****             __asm__ volatile ("ld %0, 11 * 8(fp)" : "=r"(t));
 1328              		.loc 1 171 61 is_stmt 0
 1329              	#APP
 1330              	# 171 "src/riscv.cpp" 1
 1331              		ld a5, 11 * 8(fp)
 1332              	# 0 "" 2
 1333              	.LVL74:
 172:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(start_routine));
 1334              		.loc 1 172 13 is_stmt 1
 172:src/riscv.cpp ****             __asm__ volatile ("ld %0, 12 * 8(fp)" : "=r"(start_routine));
 1335              		.loc 1 172 73 is_stmt 0
 1336              	# 172 "src/riscv.cpp" 1
 1337              		ld a5, 12 * 8(fp)
 1338              	# 0 "" 2
 1339              	.LVL75:
 1340              	#NO_APP
 1341              	.LBE124:
 1342 0424 6FF09FE4 		j	.L11
 1343              	.L48:
 1344              	.LBB125:
 183:src/riscv.cpp ****             w_sstatus(sstatus);
 1345              		.loc 1 183 13 is_stmt 1
 183:src/riscv.cpp ****             w_sstatus(sstatus);
 1346              		.loc 1 183 22 is_stmt 0
 1347 0428 833784FA 		ld	a5,-88(s0)
 1348              	.LVL76:
 1349              	.LBB113:
 1350              	.LBB114:
GAS LISTING /tmp/ccLHoJv4.s 			page 38


 194:src/../h/riscv.hpp **** }
 1351              		.loc 2 194 5 is_stmt 1
 194:src/../h/riscv.hpp **** }
 1352              		.loc 2 194 77 is_stmt 0
 1353              	#APP
 1354              	# 194 "src/../h/riscv.hpp" 1
 1355              		csrw sstatus, a5
 1356              	# 0 "" 2
 1357              	.LVL77:
 1358              	#NO_APP
 1359              	.LBE114:
 1360              	.LBE113:
 184:src/riscv.cpp ****             mc_sstatus(1<<8);
 1361              		.loc 1 184 13 is_stmt 1
 1362              	.LBB115:
 1363              	.LBB116:
 182:src/../h/riscv.hpp **** }
 1364              		.loc 2 182 5
 182:src/../h/riscv.hpp **** }
 1365              		.loc 2 182 68 is_stmt 0
 1366 0430 93070010 		li	a5,256
 1367              	#APP
 1368              	# 182 "src/../h/riscv.hpp" 1
 1369              		csrc sstatus, a5
 1370              	# 0 "" 2
 1371              	.LVL78:
 1372              	#NO_APP
 1373              	.LBE116:
 1374              	.LBE115:
 185:src/riscv.cpp ****             w_sepc(sepc);
 1375              		.loc 1 185 13 is_stmt 1
 185:src/riscv.cpp ****             w_sepc(sepc);
 1376              		.loc 1 185 19 is_stmt 0
 1377 0438 833704FA 		ld	a5,-96(s0)
 1378              	.LVL79:
 1379              	.LBB117:
 1380              	.LBB118:
 126:src/../h/riscv.hpp **** }
 1381              		.loc 2 126 5 is_stmt 1
 126:src/../h/riscv.hpp **** }
 1382              		.loc 2 126 65 is_stmt 0
 1383              	#APP
 1384              	# 126 "src/../h/riscv.hpp" 1
 1385              		csrw sepc, a5
 1386              	# 0 "" 2
 1387              	.LVL80:
 1388              	#NO_APP
 1389              	.LBE118:
 1390              	.LBE117:
 186:src/riscv.cpp ****             mc_sip(1 << 1);
 1391              		.loc 1 186 13 is_stmt 1
 1392              	.LBB119:
 1393              	.LBB120:
 160:src/../h/riscv.hpp **** }
 1394              		.loc 2 160 5
 160:src/../h/riscv.hpp **** }
 1395              		.loc 2 160 64 is_stmt 0
GAS LISTING /tmp/ccLHoJv4.s 			page 39


 1396 0440 93072000 		li	a5,2
 1397              	#APP
 1398              	# 160 "src/../h/riscv.hpp" 1
 1399              		csrc sip, a5
 1400              	# 0 "" 2
 1401              	.LVL81:
 1402              	#NO_APP
 1403              	.LBE120:
 1404              	.LBE119:
 187:src/riscv.cpp ****             return;
 1405              		.loc 1 187 13 is_stmt 1
 1406 0448 6FF05FE3 		j	.L8
 1407              	.L49:
 1408              	.LBB121:
 191:src/riscv.cpp ****             Riscv ::ms_sstatus(Riscv :: SSTATUS_SPP);
 1409              		.loc 1 191 13
 1410              	.LVL82:
 1411              	.LBB110:
 1412              	.LBB111:
 177:src/../h/riscv.hpp **** }
 1413              		.loc 2 177 5
 177:src/../h/riscv.hpp **** }
 1414              		.loc 2 177 68 is_stmt 0
 1415 044c 93070010 		li	a5,256
 1416              	#APP
 1417              	# 177 "src/../h/riscv.hpp" 1
 1418              		csrs sstatus, a5
 1419              	# 0 "" 2
 1420              	.LVL83:
 1421              	#NO_APP
 1422              	.LBE111:
 1423              	.LBE110:
 192:src/riscv.cpp ****             __asm__ volatile ("csrw sepc, ra");
 1424              		.loc 1 192 13 is_stmt 1
 192:src/riscv.cpp ****             __asm__ volatile ("csrw sepc, ra");
 1425              		.loc 1 192 47 is_stmt 0
 1426              	#APP
 1427              	# 192 "src/riscv.cpp" 1
 193:src/riscv.cpp ****             __asm__ volatile ("sret");
 1428              		csrw sepc, ra
 1429              	# 0 "" 2
 1430              		.loc 1 193 13 is_stmt 1
 193:src/riscv.cpp ****             __asm__ volatile ("sret");
 1431              		.loc 1 193 38 is_stmt 0
 1432              	# 193 "src/riscv.cpp" 1
 1433              		sret
 1434              	# 0 "" 2
 1435              	#NO_APP
 1436 045c 6FF01FE1 		j	.L11
 1437              	.LVL84:
 1438              	.L34:
 1439              	.LBE121:
 1440              	.LBE125:
 1441              	.LBE130:
 1442              	.LBE136:
 1443              	.LBE143:
 1444              	.LBE150:
GAS LISTING /tmp/ccLHoJv4.s 			page 40


 1445              	.LBE164:
 1446              	.LBE174:
 1447              	.LBE185:
 1448              	.LBE201:
 1449              	.LBE217:
 1450              	.LBE234:
 1451              	.LBE250:
 1452              	.LBE267:
 1453              	.LBE285:
 1454              	.LBE306:
 1455              	.LBE323:
 209:src/riscv.cpp ****         console_handler();
 1456              		.loc 1 209 9 is_stmt 1
 209:src/riscv.cpp ****         console_handler();
 1457              		.loc 1 209 24 is_stmt 0
 1458 0460 97000000 		call	console_handler@plt
 1458      E7800000 
 1459              	.LVL85:
 1460 0468 6FF05FE1 		j	.L8
 1461              	.LBE340:
 1462              		.cfi_endproc
 1463              	.LFE46:
 1465              		.globl	_ZN5Riscv4modeE
 1466              		.bss
 1467              		.align	3
 1468              		.set	.LANCHOR0,. + 0
 1471              	_ZN5Riscv4modeE:
 1472 0000 00000000 		.zero	8
 1472      00000000 
 1473              		.text
 1474              	.Letext0:
 1475              		.file 6 "src/../h/../lib/hw.h"
 1476              		.file 7 "src/../h/scheduler.hpp"
 1477              		.file 8 "src/../h/MemAlloc.hpp"
 1478              		.file 9 "src/../lib/console.h"
GAS LISTING /tmp/ccLHoJv4.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccLHoJv4.s:9      .text:0000000000000000 _ZN5Riscv4ModeEm
     /tmp/ccLHoJv4.s:13     .text:0000000000000000 .L0 
     /tmp/ccLHoJv4.s:15     .text:0000000000000000 .L0 
     /tmp/ccLHoJv4.s:16     .text:0000000000000004 .L0 
     /tmp/ccLHoJv4.s:18     .text:0000000000000008 .L0 
     /tmp/ccLHoJv4.s:20     .text:000000000000000c .L0 
     /tmp/ccLHoJv4.s:22     .text:000000000000000c .L0 
     /tmp/ccLHoJv4.s:23     .text:000000000000000c .L0 
     /tmp/ccLHoJv4.s:25     .text:0000000000000014 .L0 
     /tmp/ccLHoJv4.s:26     .text:0000000000000018 .L0 
     /tmp/ccLHoJv4.s:27     .text:0000000000000018 .L0 
     /tmp/ccLHoJv4.s:29     .text:000000000000001c .L0 
     /tmp/ccLHoJv4.s:31     .text:0000000000000020 .L0 
     /tmp/ccLHoJv4.s:37     .text:0000000000000020 _ZN5Riscv5RezimEv
     /tmp/ccLHoJv4.s:40     .text:0000000000000020 .L0 
     /tmp/ccLHoJv4.s:41     .text:0000000000000020 .L0 
     /tmp/ccLHoJv4.s:42     .text:0000000000000024 .L0 
     /tmp/ccLHoJv4.s:44     .text:0000000000000028 .L0 
     /tmp/ccLHoJv4.s:46     .text:000000000000002c .L0 
     /tmp/ccLHoJv4.s:48     .text:000000000000002c .L0 
     /tmp/ccLHoJv4.s:55     .text:0000000000000044 .L0 
       src/riscv.cpp:33     .text:0000000000000044 .L0 
     /tmp/ccLHoJv4.s:61     .text:0000000000000048 .L0 
       src/riscv.cpp:34     .text:0000000000000048 .L0 
     /tmp/ccLHoJv4.s:67     .text:000000000000004c .L0 
     /tmp/ccLHoJv4.s:68     .text:0000000000000050 .L0 
     /tmp/ccLHoJv4.s:69     .text:0000000000000050 .L0 
     /tmp/ccLHoJv4.s:70     .text:0000000000000050 .L0 
     /tmp/ccLHoJv4.s:72     .text:0000000000000054 .L0 
     /tmp/ccLHoJv4.s:75     .text:0000000000000058 .L0 
     /tmp/ccLHoJv4.s:77     .text:0000000000000058 .L0 
     /tmp/ccLHoJv4.s:82     .text:0000000000000058 .L0 
     /tmp/ccLHoJv4.s:83     .text:0000000000000058 .L0 
     /tmp/ccLHoJv4.s:84     .text:0000000000000058 .L0 
     /tmp/ccLHoJv4.s:91     .text:0000000000000060 .L0 
     /tmp/ccLHoJv4.s:97     .text:0000000000000064 .L0 
     /tmp/ccLHoJv4.s:100    .text:0000000000000064 .L0 
     /tmp/ccLHoJv4.s:101    .text:0000000000000064 .L0 
     /tmp/ccLHoJv4.s:102    .text:0000000000000064 .L0 
     /tmp/ccLHoJv4.s:109    .text:000000000000006c .L0 
     /tmp/ccLHoJv4.s:112    .text:0000000000000070 .L0 
     /tmp/ccLHoJv4.s:118    .text:0000000000000070 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccLHoJv4.s:121    .text:0000000000000070 .L0 
     /tmp/ccLHoJv4.s:122    .text:0000000000000070 .L0 
     /tmp/ccLHoJv4.s:123    .text:0000000000000074 .L0 
     /tmp/ccLHoJv4.s:129    .text:0000000000000088 .L0 
     /tmp/ccLHoJv4.s:130    .text:0000000000000088 .L0 
     /tmp/ccLHoJv4.s:131    .text:0000000000000088 .L0 
     /tmp/ccLHoJv4.s:132    .text:0000000000000088 .L0 
     /tmp/ccLHoJv4.s:133    .text:0000000000000088 .L0 
     /tmp/ccLHoJv4.s:135    .text:000000000000008c .L0 
     /tmp/ccLHoJv4.s:139    .text:000000000000008c .L0 
     /tmp/ccLHoJv4.s:140    .text:000000000000008c .L0 
     /tmp/ccLHoJv4.s:141    .text:000000000000008c .L0 
  src/../h/riscv.hpp:108    .text:000000000000008c .L0 
GAS LISTING /tmp/ccLHoJv4.s 			page 42


     /tmp/ccLHoJv4.s:149    .text:0000000000000094 .L0 
     /tmp/ccLHoJv4.s:150    .text:0000000000000094 .L0 
     /tmp/ccLHoJv4.s:155    .text:0000000000000098 .L0 
     /tmp/ccLHoJv4.s:156    .text:0000000000000098 .L0 
       src/riscv.cpp:41     .text:0000000000000098 .L0 
     /tmp/ccLHoJv4.s:165    .text:00000000000000a0 .L0 
     /tmp/ccLHoJv4.s:166    .text:00000000000000a0 .L0 
     /tmp/ccLHoJv4.s:168    .text:00000000000000a4 .L0 
     /tmp/ccLHoJv4.s:171    .text:00000000000000ac .L0 
     /tmp/ccLHoJv4.s:176    .text:00000000000000bc .L0 
     /tmp/ccLHoJv4.s:184    .text:00000000000000cc .L0 
     /tmp/ccLHoJv4.s:185    .text:00000000000000cc .L0 
     /tmp/ccLHoJv4.s:186    .text:00000000000000cc .L0 
     /tmp/ccLHoJv4.s:194    .text:00000000000000d4 .L0 
     /tmp/ccLHoJv4.s:202    .text:00000000000000d8 .L0 
     /tmp/ccLHoJv4.s:203    .text:00000000000000d8 .L0 
     /tmp/ccLHoJv4.s:204    .text:00000000000000d8 .L0 
  src/../h/riscv.hpp:120    .text:00000000000000d8 .L0 
     /tmp/ccLHoJv4.s:212    .text:00000000000000e0 .L0 
     /tmp/ccLHoJv4.s:213    .text:00000000000000e0 .L0 
     /tmp/ccLHoJv4.s:217    .text:00000000000000e4 .L0 
     /tmp/ccLHoJv4.s:219    .text:00000000000000e8 .L0 
     /tmp/ccLHoJv4.s:223    .text:00000000000000ec .L0 
     /tmp/ccLHoJv4.s:224    .text:00000000000000ec .L0 
     /tmp/ccLHoJv4.s:225    .text:00000000000000ec .L0 
  src/../h/riscv.hpp:188    .text:00000000000000ec .L0 
     /tmp/ccLHoJv4.s:233    .text:00000000000000f4 .L0 
     /tmp/ccLHoJv4.s:234    .text:00000000000000f4 .L0 
     /tmp/ccLHoJv4.s:238    .text:00000000000000f8 .L0 
     /tmp/ccLHoJv4.s:241    .text:00000000000000fc .L0 
     /tmp/ccLHoJv4.s:242    .text:00000000000000fc .L0 
     /tmp/ccLHoJv4.s:245    .text:0000000000000100 .L0 
     /tmp/ccLHoJv4.s:255    .text:0000000000000108 .L0 
     /tmp/ccLHoJv4.s:256    .text:0000000000000108 .L0 
     /tmp/ccLHoJv4.s:258    .text:000000000000010c .L0 
     /tmp/ccLHoJv4.s:270    .text:0000000000000114 .L0 
     /tmp/ccLHoJv4.s:271    .text:0000000000000114 .L0 
     /tmp/ccLHoJv4.s:273    .text:0000000000000118 .L0 
     /tmp/ccLHoJv4.s:287    .text:0000000000000120 .L0 
     /tmp/ccLHoJv4.s:288    .text:0000000000000120 .L0 
     /tmp/ccLHoJv4.s:290    .text:0000000000000124 .L0 
     /tmp/ccLHoJv4.s:306    .text:000000000000012c .L0 
     /tmp/ccLHoJv4.s:307    .text:000000000000012c .L0 
     /tmp/ccLHoJv4.s:309    .text:0000000000000130 .L0 
     /tmp/ccLHoJv4.s:327    .text:0000000000000138 .L0 
     /tmp/ccLHoJv4.s:328    .text:0000000000000138 .L0 
     /tmp/ccLHoJv4.s:330    .text:000000000000013c .L0 
     /tmp/ccLHoJv4.s:350    .text:0000000000000144 .L0 
     /tmp/ccLHoJv4.s:351    .text:0000000000000144 .L0 
     /tmp/ccLHoJv4.s:353    .text:0000000000000148 .L0 
     /tmp/ccLHoJv4.s:375    .text:0000000000000150 .L0 
     /tmp/ccLHoJv4.s:376    .text:0000000000000150 .L0 
     /tmp/ccLHoJv4.s:378    .text:0000000000000154 .L0 
     /tmp/ccLHoJv4.s:402    .text:000000000000015c .L0 
     /tmp/ccLHoJv4.s:403    .text:000000000000015c .L0 
     /tmp/ccLHoJv4.s:405    .text:0000000000000160 .L0 
     /tmp/ccLHoJv4.s:431    .text:0000000000000168 .L0 
GAS LISTING /tmp/ccLHoJv4.s 			page 43


     /tmp/ccLHoJv4.s:432    .text:0000000000000168 .L0 
     /tmp/ccLHoJv4.s:434    .text:000000000000016c .L0 
     /tmp/ccLHoJv4.s:462    .text:0000000000000174 .L0 
     /tmp/ccLHoJv4.s:463    .text:0000000000000174 .L0 
     /tmp/ccLHoJv4.s:465    .text:0000000000000178 .L0 
     /tmp/ccLHoJv4.s:495    .text:0000000000000180 .L0 
     /tmp/ccLHoJv4.s:496    .text:0000000000000180 .L0 
     /tmp/ccLHoJv4.s:498    .text:0000000000000184 .L0 
     /tmp/ccLHoJv4.s:530    .text:000000000000018c .L0 
     /tmp/ccLHoJv4.s:531    .text:000000000000018c .L0 
     /tmp/ccLHoJv4.s:533    .text:0000000000000190 .L0 
     /tmp/ccLHoJv4.s:567    .text:0000000000000198 .L0 
     /tmp/ccLHoJv4.s:568    .text:0000000000000198 .L0 
     /tmp/ccLHoJv4.s:570    .text:000000000000019c .L0 
     /tmp/ccLHoJv4.s:606    .text:00000000000001a4 .L0 
     /tmp/ccLHoJv4.s:607    .text:00000000000001a4 .L0 
     /tmp/ccLHoJv4.s:609    .text:00000000000001a8 .L0 
     /tmp/ccLHoJv4.s:647    .text:00000000000001b0 .L0 
     /tmp/ccLHoJv4.s:648    .text:00000000000001b0 .L0 
     /tmp/ccLHoJv4.s:650    .text:00000000000001b4 .L0 
     /tmp/ccLHoJv4.s:690    .text:00000000000001bc .L0 
     /tmp/ccLHoJv4.s:691    .text:00000000000001bc .L0 
     /tmp/ccLHoJv4.s:693    .text:00000000000001c0 .L0 
     /tmp/ccLHoJv4.s:697    .text:00000000000001c8 .L0 
     /tmp/ccLHoJv4.s:698    .text:00000000000001c8 .L0 
       src/riscv.cpp:196    .text:00000000000001c8 .L0 
     /tmp/ccLHoJv4.s:705    .text:00000000000001cc .L0 
     /tmp/ccLHoJv4.s:707    .text:00000000000001cc .L0 
     /tmp/ccLHoJv4.s:731    .text:00000000000001d8 .L0 
     /tmp/ccLHoJv4.s:732    .text:00000000000001d8 .L0 
       src/riscv.cpp:50     .text:00000000000001d8 .L0 
     /tmp/ccLHoJv4.s:739    .text:00000000000001dc .L0 
     /tmp/ccLHoJv4.s:741    .text:00000000000001dc .L0 
     /tmp/ccLHoJv4.s:744    .text:00000000000001e4 .L0 
     /tmp/ccLHoJv4.s:745    .text:00000000000001e4 .L0 
     /tmp/ccLHoJv4.s:750    .text:00000000000001f4 .L0 
       src/riscv.cpp:53     .text:00000000000001f4 .L0 
     /tmp/ccLHoJv4.s:756    .text:00000000000001f8 .L0 
       src/riscv.cpp:54     .text:00000000000001f8 .L0 
     /tmp/ccLHoJv4.s:768    .text:0000000000000200 .L0 
     /tmp/ccLHoJv4.s:769    .text:0000000000000200 .L0 
       src/riscv.cpp:58     .text:0000000000000200 .L0 
     /tmp/ccLHoJv4.s:776    .text:0000000000000204 .L0 
     /tmp/ccLHoJv4.s:778    .text:0000000000000204 .L0 
     /tmp/ccLHoJv4.s:781    .text:000000000000020c .L0 
     /tmp/ccLHoJv4.s:782    .text:000000000000020c .L0 
     /tmp/ccLHoJv4.s:787    .text:000000000000021c .L0 
       src/riscv.cpp:61     .text:000000000000021c .L0 
     /tmp/ccLHoJv4.s:793    .text:0000000000000220 .L0 
       src/riscv.cpp:62     .text:0000000000000220 .L0 
     /tmp/ccLHoJv4.s:805    .text:0000000000000228 .L0 
     /tmp/ccLHoJv4.s:806    .text:0000000000000228 .L0 
     /tmp/ccLHoJv4.s:807    .text:0000000000000228 .L0 
     /tmp/ccLHoJv4.s:808    .text:0000000000000228 .L0 
       src/riscv.cpp:68     .text:0000000000000228 .L0 
     /tmp/ccLHoJv4.s:815    .text:000000000000022c .L0 
       src/riscv.cpp:69     .text:000000000000022c .L0 
GAS LISTING /tmp/ccLHoJv4.s 			page 44


     /tmp/ccLHoJv4.s:821    .text:0000000000000230 .L0 
       src/riscv.cpp:70     .text:0000000000000230 .L0 
     /tmp/ccLHoJv4.s:827    .text:0000000000000234 .L0 
     /tmp/ccLHoJv4.s:829    .text:0000000000000234 .L0 
     /tmp/ccLHoJv4.s:832    .text:0000000000000240 .L0 
     /tmp/ccLHoJv4.s:836    .text:0000000000000244 .L0 
     /tmp/ccLHoJv4.s:837    .text:0000000000000244 .L0 
     /tmp/ccLHoJv4.s:842    .text:0000000000000254 .L0 
     /tmp/ccLHoJv4.s:844    .text:0000000000000258 .L0 
     /tmp/ccLHoJv4.s:845    .text:0000000000000258 .L0 
     /tmp/ccLHoJv4.s:848    .text:0000000000000260 .L0 
     /tmp/ccLHoJv4.s:849    .text:0000000000000260 .L0 
     /tmp/ccLHoJv4.s:850    .text:0000000000000260 .L0 
     /tmp/ccLHoJv4.s:856    .text:0000000000000268 .L0 
       src/riscv.cpp:80     .text:0000000000000268 .L0 
     /tmp/ccLHoJv4.s:868    .text:000000000000026c .L0 
     /tmp/ccLHoJv4.s:869    .text:000000000000026c .L0 
     /tmp/ccLHoJv4.s:874    .text:0000000000000270 .L0 
  src/../h/riscv.hpp:194    .text:0000000000000270 .L0 
     /tmp/ccLHoJv4.s:884    .text:0000000000000274 .L0 
     /tmp/ccLHoJv4.s:885    .text:0000000000000274 .L0 
     /tmp/ccLHoJv4.s:890    .text:0000000000000278 .L0 
  src/../h/riscv.hpp:126    .text:0000000000000278 .L0 
     /tmp/ccLHoJv4.s:903    .text:000000000000027c .L0 
     /tmp/ccLHoJv4.s:904    .text:0000000000000280 .L0 
     /tmp/ccLHoJv4.s:905    .text:0000000000000280 .L0 
     /tmp/ccLHoJv4.s:907    .text:0000000000000284 .L0 
     /tmp/ccLHoJv4.s:908    .text:0000000000000284 .L0 
     /tmp/ccLHoJv4.s:910    .text:0000000000000288 .L0 
     /tmp/ccLHoJv4.s:912    .text:000000000000028c .L0 
     /tmp/ccLHoJv4.s:914    .text:0000000000000290 .L0 
     /tmp/ccLHoJv4.s:916    .text:0000000000000294 .L0 
     /tmp/ccLHoJv4.s:920    .text:0000000000000298 .L0 
     /tmp/ccLHoJv4.s:928    .text:0000000000000298 .L0 
     /tmp/ccLHoJv4.s:929    .text:0000000000000298 .L0 
     /tmp/ccLHoJv4.s:934    .text:00000000000002a8 .L0 
     /tmp/ccLHoJv4.s:943    .text:00000000000002b8 .L0 
     /tmp/ccLHoJv4.s:944    .text:00000000000002b8 .L0 
     /tmp/ccLHoJv4.s:945    .text:00000000000002b8 .L0 
     /tmp/ccLHoJv4.s:948    .text:00000000000002c4 .L0 
     /tmp/ccLHoJv4.s:954    .text:00000000000002c8 .L0 
     /tmp/ccLHoJv4.s:955    .text:00000000000002c8 .L0 
     /tmp/ccLHoJv4.s:956    .text:00000000000002c8 .L0 
     /tmp/ccLHoJv4.s:962    .text:00000000000002d0 .L0 
     /tmp/ccLHoJv4.s:963    .text:00000000000002d0 .L0 
     /tmp/ccLHoJv4.s:964    .text:00000000000002d0 .L0 
     /tmp/ccLHoJv4.s:967    .text:00000000000002d8 .L0 
     /tmp/ccLHoJv4.s:971    .text:00000000000002dc .L0 
       src/riscv.cpp:97     .text:00000000000002dc .L0 
     /tmp/ccLHoJv4.s:977    .text:00000000000002e0 .L0 
       src/riscv.cpp:98     .text:00000000000002e0 .L0 
     /tmp/ccLHoJv4.s:988    .text:00000000000002e8 .L0 
     /tmp/ccLHoJv4.s:994    .text:00000000000002f0 .L0 
     /tmp/ccLHoJv4.s:995    .text:00000000000002f0 .L0 
     /tmp/ccLHoJv4.s:998    .text:00000000000002f8 .L0 
     /tmp/ccLHoJv4.s:999    .text:00000000000002f8 .L0 
     /tmp/ccLHoJv4.s:1004   .text:00000000000002fc .L0 
GAS LISTING /tmp/ccLHoJv4.s 			page 45


  src/../h/riscv.hpp:194    .text:00000000000002fc .L0 
     /tmp/ccLHoJv4.s:1014   .text:0000000000000300 .L0 
     /tmp/ccLHoJv4.s:1015   .text:0000000000000300 .L0 
     /tmp/ccLHoJv4.s:1020   .text:0000000000000304 .L0 
  src/../h/riscv.hpp:126    .text:0000000000000304 .L0 
     /tmp/ccLHoJv4.s:1027   .text:0000000000000308 .L0 
     /tmp/ccLHoJv4.s:1035   .text:000000000000030c .L0 
     /tmp/ccLHoJv4.s:1036   .text:000000000000030c .L0 
     /tmp/ccLHoJv4.s:1037   .text:000000000000030c .L0 
       src/riscv.cpp:112    .text:000000000000030c .L0 
     /tmp/ccLHoJv4.s:1044   .text:0000000000000310 .L0 
       src/riscv.cpp:113    .text:0000000000000310 .L0 
     /tmp/ccLHoJv4.s:1050   .text:0000000000000314 .L0 
     /tmp/ccLHoJv4.s:1052   .text:0000000000000314 .L0 
     /tmp/ccLHoJv4.s:1059   .text:0000000000000320 .L0 
     /tmp/ccLHoJv4.s:1065   .text:0000000000000324 .L0 
     /tmp/ccLHoJv4.s:1071   .text:000000000000032c .L0 
     /tmp/ccLHoJv4.s:1078   .text:0000000000000338 .L0 
     /tmp/ccLHoJv4.s:1081   .text:000000000000033c .L0 
     /tmp/ccLHoJv4.s:1082   .text:000000000000033c .L0 
     /tmp/ccLHoJv4.s:1083   .text:000000000000033c .L0 
     /tmp/ccLHoJv4.s:1089   .text:0000000000000344 .L0 
       src/riscv.cpp:117    .text:0000000000000344 .L0 
     /tmp/ccLHoJv4.s:1101   .text:000000000000034c .L0 
     /tmp/ccLHoJv4.s:1102   .text:000000000000034c .L0 
       src/riscv.cpp:122    .text:000000000000034c .L0 
     /tmp/ccLHoJv4.s:1109   .text:0000000000000350 .L0 
     /tmp/ccLHoJv4.s:1111   .text:0000000000000350 .L0 
     /tmp/ccLHoJv4.s:1115   .text:000000000000035c .L0 
     /tmp/ccLHoJv4.s:1116   .text:000000000000035c .L0 
     /tmp/ccLHoJv4.s:1119   .text:0000000000000364 .L0 
     /tmp/ccLHoJv4.s:1120   .text:0000000000000364 .L0 
     /tmp/ccLHoJv4.s:1125   .text:0000000000000374 .L0 
       src/riscv.cpp:127    .text:0000000000000374 .L0 
     /tmp/ccLHoJv4.s:1131   .text:0000000000000378 .L0 
       src/riscv.cpp:128    .text:0000000000000378 .L0 
     /tmp/ccLHoJv4.s:1143   .text:0000000000000380 .L0 
     /tmp/ccLHoJv4.s:1144   .text:0000000000000380 .L0 
       src/riscv.cpp:132    .text:0000000000000380 .L0 
     /tmp/ccLHoJv4.s:1151   .text:0000000000000384 .L0 
     /tmp/ccLHoJv4.s:1153   .text:0000000000000384 .L0 
     /tmp/ccLHoJv4.s:1156   .text:000000000000038c .L0 
       src/riscv.cpp:135    .text:000000000000038c .L0 
     /tmp/ccLHoJv4.s:1162   .text:0000000000000390 .L0 
       src/riscv.cpp:136    .text:0000000000000390 .L0 
     /tmp/ccLHoJv4.s:1174   .text:0000000000000398 .L0 
     /tmp/ccLHoJv4.s:1175   .text:0000000000000398 .L0 
       src/riscv.cpp:140    .text:0000000000000398 .L0 
     /tmp/ccLHoJv4.s:1185   .text:000000000000039c .L0 
     /tmp/ccLHoJv4.s:1186   .text:000000000000039c .L0 
     /tmp/ccLHoJv4.s:1187   .text:000000000000039c .L0 
     /tmp/ccLHoJv4.s:1189   .text:00000000000003a0 .L0 
     /tmp/ccLHoJv4.s:1192   .text:00000000000003a8 .L0 
     /tmp/ccLHoJv4.s:1194   .text:00000000000003ac .L0 
     /tmp/ccLHoJv4.s:1200   .text:00000000000003b0 .L0 
     /tmp/ccLHoJv4.s:1201   .text:00000000000003b0 .L0 
     /tmp/ccLHoJv4.s:1202   .text:00000000000003b0 .L0 
GAS LISTING /tmp/ccLHoJv4.s 			page 46


     /tmp/ccLHoJv4.s:1208   .text:00000000000003b8 .L0 
       src/riscv.cpp:143    .text:00000000000003b8 .L0 
     /tmp/ccLHoJv4.s:1221   .text:00000000000003c0 .L0 
     /tmp/ccLHoJv4.s:1222   .text:00000000000003c0 .L0 
     /tmp/ccLHoJv4.s:1234   .text:00000000000003cc .L0 
     /tmp/ccLHoJv4.s:1235   .text:00000000000003cc .L0 
     /tmp/ccLHoJv4.s:1238   .text:00000000000003d4 .L0 
       src/riscv.cpp:149    .text:00000000000003d4 .L0 
     /tmp/ccLHoJv4.s:1244   .text:00000000000003d8 .L0 
       src/riscv.cpp:150    .text:00000000000003d8 .L0 
     /tmp/ccLHoJv4.s:1256   .text:00000000000003e0 .L0 
     /tmp/ccLHoJv4.s:1257   .text:00000000000003e0 .L0 
       src/riscv.cpp:154    .text:00000000000003e0 .L0 
     /tmp/ccLHoJv4.s:1264   .text:00000000000003e4 .L0 
     /tmp/ccLHoJv4.s:1266   .text:00000000000003e4 .L0 
     /tmp/ccLHoJv4.s:1276   .text:00000000000003f4 .L0 
     /tmp/ccLHoJv4.s:1277   .text:00000000000003f4 .L0 
     /tmp/ccLHoJv4.s:1278   .text:00000000000003f4 .L0 
     /tmp/ccLHoJv4.s:1279   .text:00000000000003f4 .L0 
       src/riscv.cpp:160    .text:00000000000003f4 .L0 
     /tmp/ccLHoJv4.s:1286   .text:00000000000003f8 .L0 
       src/riscv.cpp:161    .text:00000000000003f8 .L0 
     /tmp/ccLHoJv4.s:1292   .text:00000000000003fc .L0 
       src/riscv.cpp:162    .text:00000000000003fc .L0 
     /tmp/ccLHoJv4.s:1298   .text:0000000000000400 .L0 
     /tmp/ccLHoJv4.s:1300   .text:0000000000000400 .L0 
     /tmp/ccLHoJv4.s:1303   .text:0000000000000408 .L0 
     /tmp/ccLHoJv4.s:1306   .text:000000000000040c .L0 
     /tmp/ccLHoJv4.s:1307   .text:000000000000040c .L0 
     /tmp/ccLHoJv4.s:1308   .text:000000000000040c .L0 
     /tmp/ccLHoJv4.s:1314   .text:0000000000000414 .L0 
       src/riscv.cpp:167    .text:0000000000000414 .L0 
     /tmp/ccLHoJv4.s:1326   .text:000000000000041c .L0 
     /tmp/ccLHoJv4.s:1327   .text:000000000000041c .L0 
     /tmp/ccLHoJv4.s:1328   .text:000000000000041c .L0 
       src/riscv.cpp:171    .text:000000000000041c .L0 
     /tmp/ccLHoJv4.s:1335   .text:0000000000000420 .L0 
       src/riscv.cpp:172    .text:0000000000000420 .L0 
     /tmp/ccLHoJv4.s:1346   .text:0000000000000428 .L0 
     /tmp/ccLHoJv4.s:1347   .text:0000000000000428 .L0 
     /tmp/ccLHoJv4.s:1352   .text:000000000000042c .L0 
  src/../h/riscv.hpp:194    .text:000000000000042c .L0 
     /tmp/ccLHoJv4.s:1364   .text:0000000000000430 .L0 
     /tmp/ccLHoJv4.s:1365   .text:0000000000000430 .L0 
     /tmp/ccLHoJv4.s:1366   .text:0000000000000430 .L0 
     /tmp/ccLHoJv4.s:1376   .text:0000000000000438 .L0 
     /tmp/ccLHoJv4.s:1377   .text:0000000000000438 .L0 
     /tmp/ccLHoJv4.s:1382   .text:000000000000043c .L0 
  src/../h/riscv.hpp:126    .text:000000000000043c .L0 
     /tmp/ccLHoJv4.s:1394   .text:0000000000000440 .L0 
     /tmp/ccLHoJv4.s:1395   .text:0000000000000440 .L0 
     /tmp/ccLHoJv4.s:1396   .text:0000000000000440 .L0 
     /tmp/ccLHoJv4.s:1406   .text:0000000000000448 .L0 
     /tmp/ccLHoJv4.s:1413   .text:000000000000044c .L0 
     /tmp/ccLHoJv4.s:1414   .text:000000000000044c .L0 
     /tmp/ccLHoJv4.s:1415   .text:000000000000044c .L0 
     /tmp/ccLHoJv4.s:1425   .text:0000000000000454 .L0 
GAS LISTING /tmp/ccLHoJv4.s 			page 47


       src/riscv.cpp:192    .text:0000000000000454 .L0 
     /tmp/ccLHoJv4.s:1431   .text:0000000000000458 .L0 
       src/riscv.cpp:193    .text:0000000000000458 .L0 
     /tmp/ccLHoJv4.s:1457   .text:0000000000000460 .L0 
     /tmp/ccLHoJv4.s:1458   .text:0000000000000460 .L0 
     /tmp/ccLHoJv4.s:1462   .text:000000000000046c .L0 
     /tmp/ccLHoJv4.s:1471   .bss:0000000000000000 _ZN5Riscv4modeE
     /tmp/ccLHoJv4.s:1468   .bss:0000000000000000 .LANCHOR0
     /tmp/ccLHoJv4.s:1479   .text:000000000000046c .L0 
     /tmp/ccLHoJv4.s:23     .text:000000000000000c .L0 
     /tmp/ccLHoJv4.s:48     .text:000000000000002c .L0 
     /tmp/ccLHoJv4.s:829    .text:0000000000000234 .L0 
     /tmp/ccLHoJv4.s:934    .text:00000000000002a8 .L0 
     /tmp/ccLHoJv4.s:945    .text:00000000000002b8 .L0 
     /tmp/ccLHoJv4.s:74     .text:0000000000000058 .L4
     /tmp/ccLHoJv4.s:93     .text:0000000000000064 .L5
     /tmp/ccLHoJv4.s:53     .text:0000000000000044 .L6
     /tmp/ccLHoJv4.s:195    .text:00000000000000d8 .L33
     /tmp/ccLHoJv4.s:1438   .text:0000000000000460 .L34
     /tmp/ccLHoJv4.s:897    .text:000000000000027c .L8
     /tmp/ccLHoJv4.s:712    .text:00000000000001d8 .L35
     /tmp/ccLHoJv4.s:764    .text:0000000000000200 .L36
     /tmp/ccLHoJv4.s:801    .text:0000000000000228 .L37
     /tmp/ccLHoJv4.s:938    .text:00000000000002b8 .L38
     /tmp/ccLHoJv4.s:990    .text:00000000000002f0 .L39
     /tmp/ccLHoJv4.s:1029   .text:000000000000030c .L40
     /tmp/ccLHoJv4.s:1097   .text:000000000000034c .L41
     /tmp/ccLHoJv4.s:1139   .text:0000000000000380 .L42
     /tmp/ccLHoJv4.s:1170   .text:0000000000000398 .L43
     /tmp/ccLHoJv4.s:862    .text:000000000000026c .L11
     /tmp/ccLHoJv4.s:1226   .text:00000000000003cc .L44
     /tmp/ccLHoJv4.s:1252   .text:00000000000003e0 .L45
     /tmp/ccLHoJv4.s:1272   .text:00000000000003f4 .L46
     /tmp/ccLHoJv4.s:1322   .text:000000000000041c .L47
     /tmp/ccLHoJv4.s:1343   .text:0000000000000428 .L48
     /tmp/ccLHoJv4.s:1407   .text:000000000000044c .L49
     /tmp/ccLHoJv4.s:919    .text:0000000000000298 .L50
     /tmp/ccLHoJv4.s:834    .text:0000000000000244 .L14
     /tmp/ccLHoJv4.s:985    .text:00000000000002e8 .L31
     /tmp/ccLHoJv4.s:969    .text:00000000000002dc .L16
     /tmp/ccLHoJv4.s:1216   .text:00000000000003c0 .L51
     /tmp/ccLHoJv4.s:1196   .text:00000000000003b0 .L22
     /tmp/ccLHoJv4.s:3668   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccLHoJv4.s:5714   .debug_str:00000000000008dd .LASF189
     /tmp/ccLHoJv4.s:5774   .debug_str:0000000000000b04 .LASF190
     /tmp/ccLHoJv4.s:5458   .debug_str:0000000000000175 .LASF191
     /tmp/ccLHoJv4.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccLHoJv4.s:1474   .text:000000000000046c .Letext0
     /tmp/ccLHoJv4.s:5398   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccLHoJv4.s:5518   .debug_str:000000000000034d .LASF0
     /tmp/ccLHoJv4.s:5552   .debug_str:0000000000000487 .LASF1
     /tmp/ccLHoJv4.s:5642   .debug_str:000000000000070a .LASF2
     /tmp/ccLHoJv4.s:5652   .debug_str:0000000000000760 .LASF4
     /tmp/ccLHoJv4.s:5532   .debug_str:00000000000003c7 .LASF3
     /tmp/ccLHoJv4.s:5408   .debug_str:000000000000002d .LASF5
     /tmp/ccLHoJv4.s:5612   .debug_str:0000000000000604 .LASF6
     /tmp/ccLHoJv4.s:5540   .debug_str:0000000000000428 .LASF7
GAS LISTING /tmp/ccLHoJv4.s 			page 48


     /tmp/ccLHoJv4.s:5494   .debug_str:00000000000002a4 .LASF8
     /tmp/ccLHoJv4.s:5502   .debug_str:00000000000002e6 .LASF9
     /tmp/ccLHoJv4.s:5432   .debug_str:00000000000000b5 .LASF10
     /tmp/ccLHoJv4.s:5482   .debug_str:0000000000000219 .LASF11
     /tmp/ccLHoJv4.s:5442   .debug_str:0000000000000104 .LASF12
     /tmp/ccLHoJv4.s:5430   .debug_str:00000000000000a5 .LASF13
     /tmp/ccLHoJv4.s:5680   .debug_str:000000000000080b .LASF14
     /tmp/ccLHoJv4.s:5470   .debug_str:00000000000001c7 .LASF15
     /tmp/ccLHoJv4.s:5668   .debug_str:00000000000007b9 .LASF16
     /tmp/ccLHoJv4.s:5756   .debug_str:0000000000000aaa .LASF74
     /tmp/ccLHoJv4.s:5632   .debug_str:00000000000006ba .LASF20
     /tmp/ccLHoJv4.s:5546   .debug_str:0000000000000470 .LASF17
     /tmp/ccLHoJv4.s:5464   .debug_str:0000000000000196 .LASF18
     /tmp/ccLHoJv4.s:5764   .debug_str:0000000000000acf .LASF19
     /tmp/ccLHoJv4.s:5734   .debug_str:0000000000000a0b .LASF21
     /tmp/ccLHoJv4.s:5476   .debug_str:0000000000000201 .LASF22
     /tmp/ccLHoJv4.s:5712   .debug_str:00000000000008d0 .LASF23
     /tmp/ccLHoJv4.s:5450   .debug_str:0000000000000149 .LASF24
     /tmp/ccLHoJv4.s:5700   .debug_str:000000000000088e .LASF100
     /tmp/ccLHoJv4.s:5728   .debug_str:00000000000009f7 .LASF25
     /tmp/ccLHoJv4.s:5594   .debug_str:000000000000057e .LASF27
     /tmp/ccLHoJv4.s:5504   .debug_str:00000000000002f4 .LASF31
     /tmp/ccLHoJv4.s:5724   .debug_str:00000000000009d7 .LASF33
     /tmp/ccLHoJv4.s:5658   .debug_str:0000000000000781 .LASF26
     /tmp/ccLHoJv4.s:5472   .debug_str:00000000000001dd .LASF28
     /tmp/ccLHoJv4.s:5522   .debug_str:0000000000000369 .LASF29
     /tmp/ccLHoJv4.s:5770   .debug_str:0000000000000ae2 .LASF30
     /tmp/ccLHoJv4.s:5730   .debug_str:00000000000009fd .LASF35
     /tmp/ccLHoJv4.s:5722   .debug_str:00000000000009c2 .LASF37
     /tmp/ccLHoJv4.s:5638   .debug_str:00000000000006f6 .LASF32
     /tmp/ccLHoJv4.s:5598   .debug_str:00000000000005a4 .LASF34
     /tmp/ccLHoJv4.s:5624   .debug_str:0000000000000671 .LASF36
     /tmp/ccLHoJv4.s:5626   .debug_str:0000000000000678 .LASF38
     /tmp/ccLHoJv4.s:5588   .debug_str:0000000000000568 .LASF39
     /tmp/ccLHoJv4.s:5544   .debug_str:000000000000045d .LASF40
     /tmp/ccLHoJv4.s:5772   .debug_str:0000000000000afc .LASF41
     /tmp/ccLHoJv4.s:5718   .debug_str:00000000000009a6 .LASF42
     /tmp/ccLHoJv4.s:5584   .debug_str:000000000000054c .LASF43
     /tmp/ccLHoJv4.s:5596   .debug_str:0000000000000590 .LASF44
     /tmp/ccLHoJv4.s:5562   .debug_str:00000000000004c8 .LASF45
     /tmp/ccLHoJv4.s:5630   .debug_str:00000000000006a6 .LASF46
     /tmp/ccLHoJv4.s:5802   .debug_str:0000000000000bf2 .LASF47
     /tmp/ccLHoJv4.s:5526   .debug_str:000000000000037c .LASF48
     /tmp/ccLHoJv4.s:5462   .debug_str:0000000000000191 .LASF49
     /tmp/ccLHoJv4.s:5400   .debug_str:0000000000000000 .LASF50
     /tmp/ccLHoJv4.s:5592   .debug_str:0000000000000579 .LASF51
     /tmp/ccLHoJv4.s:5604   .debug_str:00000000000005d3 .LASF52
     /tmp/ccLHoJv4.s:5766   .debug_str:0000000000000ad8 .LASF53
     /tmp/ccLHoJv4.s:5534   .debug_str:00000000000003d9 .LASF54
     /tmp/ccLHoJv4.s:5678   .debug_str:0000000000000804 .LASF55
     /tmp/ccLHoJv4.s:5654   .debug_str:0000000000000767 .LASF56
     /tmp/ccLHoJv4.s:5656   .debug_str:000000000000077a .LASF57
     /tmp/ccLHoJv4.s:5438   .debug_str:00000000000000d3 .LASF58
     /tmp/ccLHoJv4.s:5460   .debug_str:000000000000018b .LASF59
     /tmp/ccLHoJv4.s:5512   .debug_str:0000000000000321 .LASF60
     /tmp/ccLHoJv4.s:5524   .debug_str:0000000000000376 .LASF61
     /tmp/ccLHoJv4.s:5452   .debug_str:0000000000000155 .LASF62
GAS LISTING /tmp/ccLHoJv4.s 			page 49


     /tmp/ccLHoJv4.s:5410   .debug_str:0000000000000034 .LASF63
     /tmp/ccLHoJv4.s:5646   .debug_str:0000000000000722 .LASF64
     /tmp/ccLHoJv4.s:5640   .debug_str:00000000000006ff .LASF65
     /tmp/ccLHoJv4.s:5798   .debug_str:0000000000000bcd .LASF66
     /tmp/ccLHoJv4.s:5760   .debug_str:0000000000000abd .LASF67
     /tmp/ccLHoJv4.s:5780   .debug_str:0000000000000b32 .LASF68
     /tmp/ccLHoJv4.s:5750   .debug_str:0000000000000a78 .LASF69
     /tmp/ccLHoJv4.s:5572   .debug_str:00000000000004e9 .LASF70
     /tmp/ccLHoJv4.s:5726   .debug_str:00000000000009e8 .LASF71
     /tmp/ccLHoJv4.s:5500   .debug_str:00000000000002ca .LASF72
     /tmp/ccLHoJv4.s:5616   .debug_str:000000000000061e .LASF110
     /tmp/ccLHoJv4.s:5538   .debug_str:0000000000000406 .LASF112
     /tmp/ccLHoJv4.s:5748   .debug_str:0000000000000a6f .LASF73
     /tmp/ccLHoJv4.s:5414   .debug_str:0000000000000045 .LASF75
     /tmp/ccLHoJv4.s:5688   .debug_str:000000000000083c .LASF161
     /tmp/ccLHoJv4.s:5706   .debug_str:00000000000008b3 .LASF76
     /tmp/ccLHoJv4.s:5784   .debug_str:0000000000000b67 .LASF77
     /tmp/ccLHoJv4.s:5582   .debug_str:0000000000000546 .LASF78
     /tmp/ccLHoJv4.s:5778   .debug_str:0000000000000b1e .LASF80
     /tmp/ccLHoJv4.s:5560   .debug_str:00000000000004c1 .LASF84
     /tmp/ccLHoJv4.s:5752   .debug_str:0000000000000a82 .LASF86
     /tmp/ccLHoJv4.s:5412   .debug_str:000000000000003f .LASF79
     /tmp/ccLHoJv4.s:5736   .debug_str:0000000000000a1a .LASF81
     /tmp/ccLHoJv4.s:5454   .debug_str:0000000000000167 .LASF82
     /tmp/ccLHoJv4.s:5448   .debug_str:0000000000000132 .LASF83
     /tmp/ccLHoJv4.s:5682   .debug_str:0000000000000817 .LASF85
     /tmp/ccLHoJv4.s:5406   .debug_str:000000000000001d .LASF87
     /tmp/ccLHoJv4.s:5690   .debug_str:0000000000000844 .LASF88
     /tmp/ccLHoJv4.s:5648   .debug_str:000000000000073a .LASF89
     /tmp/ccLHoJv4.s:5418   .debug_str:0000000000000055 .LASF90
     /tmp/ccLHoJv4.s:5530   .debug_str:00000000000003ac .LASF91
     /tmp/ccLHoJv4.s:5708   .debug_str:00000000000008b8 .LASF92
     /tmp/ccLHoJv4.s:5622   .debug_str:000000000000064a .LASF93
     /tmp/ccLHoJv4.s:5602   .debug_str:00000000000005ce .LASF192
     /tmp/ccLHoJv4.s:5514   .debug_str:0000000000000333 .LASF94
     /tmp/ccLHoJv4.s:5576   .debug_str:0000000000000506 .LASF95
     /tmp/ccLHoJv4.s:5554   .debug_str:000000000000049a .LASF96
     /tmp/ccLHoJv4.s:5586   .debug_str:0000000000000554 .LASF97
     /tmp/ccLHoJv4.s:5428   .debug_str:000000000000009a .LASF98
     /tmp/ccLHoJv4.s:5786   .debug_str:0000000000000b7d .LASF99
     /tmp/ccLHoJv4.s:5710   .debug_str:00000000000008c8 .LASF101
     /tmp/ccLHoJv4.s:5614   .debug_str:0000000000000617 .LASF102
     /tmp/ccLHoJv4.s:5558   .debug_str:00000000000004b8 .LASF103
     /tmp/ccLHoJv4.s:5672   .debug_str:00000000000007e1 .LASF104
     /tmp/ccLHoJv4.s:5702   .debug_str:0000000000000893 .LASF105
     /tmp/ccLHoJv4.s:5404   .debug_str:0000000000000018 .LASF106
     /tmp/ccLHoJv4.s:5794   .debug_str:0000000000000ba6 .LASF107
     /tmp/ccLHoJv4.s:5720   .debug_str:00000000000009ba .LASF108
     /tmp/ccLHoJv4.s:5666   .debug_str:00000000000007b0 .LASF109
     /tmp/ccLHoJv4.s:5422   .debug_str:0000000000000077 .LASF111
     /tmp/ccLHoJv4.s:5634   .debug_str:00000000000006c5 .LASF113
     /tmp/ccLHoJv4.s:5446   .debug_str:0000000000000124 .LASF116
     /tmp/ccLHoJv4.s:5488   .debug_str:000000000000024e .LASF193
     /tmp/ccLHoJv4.s:5650   .debug_str:0000000000000755 .LASF194
     /tmp/ccLHoJv4.s:5492   .debug_str:000000000000029a .LASF114
     /tmp/ccLHoJv4.s:5692   .debug_str:000000000000084f .LASF115
     /tmp/ccLHoJv4.s:5788   .debug_str:0000000000000b82 .LASF195
GAS LISTING /tmp/ccLHoJv4.s 			page 50


     /tmp/ccLHoJv4.s:5536   .debug_str:00000000000003ea .LASF196
     /tmp/ccLHoJv4.s:5804   .debug_str:0000000000000bfa .LASF117
     /tmp/ccLHoJv4.s:5732   .debug_str:0000000000000a06 .LASF197
     /tmp/ccLHoJv4.s:5676   .debug_str:00000000000007ff .LASF118
     /tmp/ccLHoJv4.s:5566   .debug_str:00000000000004d8 .LASF119
     /tmp/ccLHoJv4.s:5578   .debug_str:0000000000000531 .LASF120
     /tmp/ccLHoJv4.s:5738   .debug_str:0000000000000a2e .LASF121
     /tmp/ccLHoJv4.s:5628   .debug_str:000000000000068b .LASF122
     /tmp/ccLHoJv4.s:5644   .debug_str:0000000000000718 .LASF198
     /tmp/ccLHoJv4.s:5506   .debug_str:00000000000002f9 .LASF199
     /tmp/ccLHoJv4.s:5548   .debug_str:0000000000000479 .LASF123
     /tmp/ccLHoJv4.s:5796   .debug_str:0000000000000bac .LASF124
     /tmp/ccLHoJv4.s:5564   .debug_str:00000000000004d0 .LASF125
     /tmp/ccLHoJv4.s:5490   .debug_str:000000000000027a .LASF126
     /tmp/ccLHoJv4.s:5608   .debug_str:00000000000005ec .LASF127
     /tmp/ccLHoJv4.s:5542   .debug_str:000000000000043b .LASF128
     /tmp/ccLHoJv4.s:5806   .debug_str:0000000000000c08 .LASF129
     /tmp/ccLHoJv4.s:5782   .debug_str:0000000000000b48 .LASF130
     /tmp/ccLHoJv4.s:5660   .debug_str:000000000000078f .LASF131
     /tmp/ccLHoJv4.s:5484   .debug_str:0000000000000228 .LASF132
     /tmp/ccLHoJv4.s:5618   .debug_str:0000000000000633 .LASF133
     /tmp/ccLHoJv4.s:5440   .debug_str:00000000000000e6 .LASF134
     /tmp/ccLHoJv4.s:5570   .debug_str:00000000000004e4 .LASF135
     /tmp/ccLHoJv4.s:5696   .debug_str:0000000000000884 .LASF136
     /tmp/ccLHoJv4.s:5508   .debug_str:0000000000000314 .LASF137
     /tmp/ccLHoJv4.s:5478   .debug_str:000000000000020d .LASF138
     /tmp/ccLHoJv4.s:5744   .debug_str:0000000000000a5f .LASF139
     /tmp/ccLHoJv4.s:5664   .debug_str:00000000000007a6 .LASF140
     /tmp/ccLHoJv4.s:5600   .debug_str:00000000000005b9 .LASF141
     /tmp/ccLHoJv4.s:5424   .debug_str:0000000000000085 .LASF142
     /tmp/ccLHoJv4.s:5704   .debug_str:00000000000008ab .LASF143
     /tmp/ccLHoJv4.s:5742   .debug_str:0000000000000a4a .LASF144
     /tmp/ccLHoJv4.s:5456   .debug_str:0000000000000170 .LASF145
     /tmp/ccLHoJv4.s:5580   .debug_str:0000000000000536 .LASF146
     /tmp/ccLHoJv4.s:5684   .debug_str:0000000000000820 .LASF147
     /tmp/ccLHoJv4.s:5670   .debug_str:00000000000007cf .LASF148
     /tmp/ccLHoJv4.s:5520   .debug_str:000000000000035a .LASF200
     /tmp/ccLHoJv4.s:5474   .debug_str:00000000000001f8 .LASF149
     /tmp/ccLHoJv4.s:5636   .debug_str:00000000000006e2 .LASF150
     /tmp/ccLHoJv4.s:5436   .debug_str:00000000000000c9 .LASF151
     /tmp/ccLHoJv4.s:5686   .debug_str:0000000000000827 .LASF152
     /tmp/ccLHoJv4.s:5610   .debug_str:00000000000005f8 .LASF153
     /tmp/ccLHoJv4.s:5790   .debug_str:0000000000000b96 .LASF154
     /tmp/ccLHoJv4.s:5754   .debug_str:0000000000000a97 .LASF155
     /tmp/ccLHoJv4.s:5516   .debug_str:0000000000000347 .LASF156
     /tmp/ccLHoJv4.s:5466   .debug_str:000000000000019f .LASF157
     /tmp/ccLHoJv4.s:5792   .debug_str:0000000000000b9e .LASF158
     /tmp/ccLHoJv4.s:5426   .debug_str:0000000000000092 .LASF159
     /tmp/ccLHoJv4.s:5606   .debug_str:00000000000005e4 .LASF160
     /tmp/ccLHoJv4.s:5662   .debug_str:000000000000079a .LASF162
     /tmp/ccLHoJv4.s:5434   .debug_str:00000000000000c4 .LASF163
     /tmp/ccLHoJv4.s:5550   .debug_str:0000000000000482 .LASF164
     /tmp/ccLHoJv4.s:5746   .debug_str:0000000000000a66 .LASF165
     /tmp/ccLHoJv4.s:5768   .debug_str:0000000000000add .LASF166
     /tmp/ccLHoJv4.s:5590   .debug_str:000000000000056f .LASF167
     /tmp/ccLHoJv4.s:5776   .debug_str:0000000000000b12 .LASF168
     /tmp/ccLHoJv4.s:5528   .debug_str:0000000000000390 .LASF169
GAS LISTING /tmp/ccLHoJv4.s 			page 51


     /tmp/ccLHoJv4.s:5402   .debug_str:0000000000000011 .LASF170
     /tmp/ccLHoJv4.s:5420   .debug_str:0000000000000061 .LASF171
     /tmp/ccLHoJv4.s:5416   .debug_str:000000000000004d .LASF172
     /tmp/ccLHoJv4.s:5556   .debug_str:00000000000004a0 .LASF173
     /tmp/ccLHoJv4.s:5694   .debug_str:0000000000000863 .LASF174
     /tmp/ccLHoJv4.s:5496   .debug_str:00000000000002b4 .LASF175
     /tmp/ccLHoJv4.s:5444   .debug_str:0000000000000114 .LASF201
     /tmp/ccLHoJv4.s:5486   .debug_str:0000000000000249 .LASF182
     /tmp/ccLHoJv4.s:5468   .debug_str:00000000000001b0 .LASF183
     /tmp/ccLHoJv4.s:119    .text:0000000000000070 .LFB46
     /tmp/ccLHoJv4.s:1463   .text:000000000000046c .LFE46
     /tmp/ccLHoJv4.s:5674   .debug_str:00000000000007f8 .LASF176
     /tmp/ccLHoJv4.s:4891   .debug_loc:0000000000000000 .LLST1
     /tmp/ccLHoJv4.s:5334   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccLHoJv4.s:5716   .debug_str:00000000000009a1 .LASF177
     /tmp/ccLHoJv4.s:5762   .debug_str:0000000000000ac7 .LASF178
     /tmp/ccLHoJv4.s:729    .text:00000000000001d8 .LBB283
     /tmp/ccLHoJv4.s:761    .text:00000000000001fc .LBE283
     /tmp/ccLHoJv4.s:4998   .debug_loc:0000000000000186 .LLST39
     /tmp/ccLHoJv4.s:5005   .debug_loc:00000000000001a9 .LLST40
     /tmp/ccLHoJv4.s:742    .text:00000000000001e4 .LVL11
     /tmp/ccLHoJv4.s:748    .text:00000000000001f4 .LVL12
     /tmp/ccLHoJv4.s:766    .text:0000000000000200 .LBB265
     /tmp/ccLHoJv4.s:798    .text:0000000000000224 .LBE265
     /tmp/ccLHoJv4.s:5012   .debug_loc:00000000000001cc .LLST37
     /tmp/ccLHoJv4.s:5019   .debug_loc:00000000000001ef .LLST38
     /tmp/ccLHoJv4.s:779    .text:000000000000020c .LVL15
     /tmp/ccLHoJv4.s:785    .text:000000000000021c .LVL16
     /tmp/ccLHoJv4.s:5026   .debug_loc:0000000000000212 .LLST33
     /tmp/ccLHoJv4.s:5620   .debug_str:000000000000063c .LASF179
     /tmp/ccLHoJv4.s:5037   .debug_loc:0000000000000248 .LLST34
     /tmp/ccLHoJv4.s:5048   .debug_loc:000000000000027e .LLST35
     /tmp/ccLHoJv4.s:5059   .debug_loc:00000000000002b4 .LLST36
     /tmp/ccLHoJv4.s:840    .text:0000000000000254 .LVL22
     /tmp/ccLHoJv4.s:846    .text:0000000000000260 .LVL23
     /tmp/ccLHoJv4.s:932    .text:00000000000002a8 .LVL30
     /tmp/ccLHoJv4.s:5067   .debug_loc:00000000000002d8 .LLST30
     /tmp/ccLHoJv4.s:951    .text:00000000000002c8 .LBB231
     /tmp/ccLHoJv4.s:960    .text:00000000000002d0 .LBE231
     /tmp/ccLHoJv4.s:5079   .debug_loc:000000000000030f .LLST31
     /tmp/ccLHoJv4.s:5087   .debug_loc:0000000000000333 .LLST32
     /tmp/ccLHoJv4.s:965    .text:00000000000002d8 .LVL34
     /tmp/ccLHoJv4.s:1033   .text:000000000000030c .LBB196
     /tmp/ccLHoJv4.s:1094   .text:0000000000000348 .LBE196
     /tmp/ccLHoJv4.s:5094   .debug_loc:0000000000000356 .LLST22
     /tmp/ccLHoJv4.s:5101   .debug_loc:0000000000000379 .LLST23
     /tmp/ccLHoJv4.s:5108   .debug_loc:000000000000039c .LLST24
     /tmp/ccLHoJv4.s:1055   .text:0000000000000320 .LBB197
     /tmp/ccLHoJv4.s:1076   .text:0000000000000338 .LBE197
     /tmp/ccLHoJv4.s:5116   .debug_loc:00000000000003c0 .LLST25
     /tmp/ccLHoJv4.s:5123   .debug_loc:00000000000003e3 .LLST26
     /tmp/ccLHoJv4.s:1061   .text:0000000000000324 .LBB199
     /tmp/ccLHoJv4.s:1069   .text:000000000000032c .LBE199
     /tmp/ccLHoJv4.s:5130   .debug_loc:0000000000000406 .LLST27
     /tmp/ccLHoJv4.s:1054   .text:0000000000000320 .LVL44
     /tmp/ccLHoJv4.s:1099   .text:000000000000034c .LBB184
     /tmp/ccLHoJv4.s:1136   .text:000000000000037c .LBE184
GAS LISTING /tmp/ccLHoJv4.s 			page 52


     /tmp/ccLHoJv4.s:5139   .debug_loc:000000000000042b .LLST20
     /tmp/ccLHoJv4.s:5146   .debug_loc:000000000000044e .LLST21
     /tmp/ccLHoJv4.s:1113   .text:000000000000035c .LVL51
     /tmp/ccLHoJv4.s:1117   .text:0000000000000364 .LVL52
     /tmp/ccLHoJv4.s:1123   .text:0000000000000374 .LVL53
     /tmp/ccLHoJv4.s:1141   .text:0000000000000380 .LBB173
     /tmp/ccLHoJv4.s:1167   .text:0000000000000394 .LBE173
     /tmp/ccLHoJv4.s:5153   .debug_loc:0000000000000471 .LLST18
     /tmp/ccLHoJv4.s:5160   .debug_loc:0000000000000494 .LLST19
     /tmp/ccLHoJv4.s:1154   .text:000000000000038c .LVL56
     /tmp/ccLHoJv4.s:5167   .debug_loc:00000000000004b7 .LLST15
     /tmp/ccLHoJv4.s:5178   .debug_loc:00000000000004ed .LLST16
     /tmp/ccLHoJv4.s:1183   .text:000000000000039c .LBB159
     /tmp/ccLHoJv4.s:1223   .text:00000000000003c8 .LVL61
     /tmp/ccLHoJv4.s:1232   .text:00000000000003cc .LBB142
     /tmp/ccLHoJv4.s:1249   .text:00000000000003dc .LBE142
     /tmp/ccLHoJv4.s:5186   .debug_loc:0000000000000511 .LLST14
     /tmp/ccLHoJv4.s:1236   .text:00000000000003d4 .LVL63
     /tmp/ccLHoJv4.s:1254   .text:00000000000003e0 .LBB135
     /tmp/ccLHoJv4.s:1269   .text:00000000000003f0 .LBE135
     /tmp/ccLHoJv4.s:5193   .debug_loc:0000000000000534 .LLST13
     /tmp/ccLHoJv4.s:1268   .text:00000000000003f0 .LVL66
     /tmp/ccLHoJv4.s:1274   .text:00000000000003f4 .LBB129
     /tmp/ccLHoJv4.s:1319   .text:0000000000000418 .LBE129
     /tmp/ccLHoJv4.s:5200   .debug_loc:0000000000000557 .LLST9
     /tmp/ccLHoJv4.s:5207   .debug_loc:000000000000057a .LLST10
     /tmp/ccLHoJv4.s:5214   .debug_loc:000000000000059d .LLST11
     /tmp/ccLHoJv4.s:5221   .debug_loc:00000000000005c0 .LLST12
     /tmp/ccLHoJv4.s:1301   .text:0000000000000408 .LVL71
     /tmp/ccLHoJv4.s:1324   .text:000000000000041c .LBB124
     /tmp/ccLHoJv4.s:1341   .text:0000000000000424 .LBE124
     /tmp/ccLHoJv4.s:695    .text:00000000000001c8 .LBB109
     /tmp/ccLHoJv4.s:709    .text:00000000000001d4 .LBE109
     /tmp/ccLHoJv4.s:5574   .debug_str:00000000000004ff .LASF180
     /tmp/ccLHoJv4.s:5229   .debug_loc:00000000000005e4 .LLST3
     /tmp/ccLHoJv4.s:708    .text:00000000000001d4 .LVL8
     /tmp/ccLHoJv4.s:200    .text:00000000000000d8 .LBB88
     /tmp/ccLHoJv4.s:215    .text:00000000000000e4 .LBE88
     /tmp/ccLHoJv4.s:221    .text:00000000000000ec .LBB90
     /tmp/ccLHoJv4.s:236    .text:00000000000000f8 .LBE90
     /tmp/ccLHoJv4.s:1411   .text:000000000000044c .LBB110
     /tmp/ccLHoJv4.s:1423   .text:0000000000000454 .LBE110
     /tmp/ccLHoJv4.s:5236   .debug_loc:0000000000000607 .LLST4
     /tmp/ccLHoJv4.s:1349   .text:000000000000042c .LBB113
     /tmp/ccLHoJv4.s:1360   .text:0000000000000430 .LBE113
     /tmp/ccLHoJv4.s:5245   .debug_loc:000000000000062d .LLST5
     /tmp/ccLHoJv4.s:1362   .text:0000000000000430 .LBB115
     /tmp/ccLHoJv4.s:1374   .text:0000000000000438 .LBE115
     /tmp/ccLHoJv4.s:5252   .debug_loc:0000000000000650 .LLST6
     /tmp/ccLHoJv4.s:1379   .text:000000000000043c .LBB117
     /tmp/ccLHoJv4.s:1390   .text:0000000000000440 .LBE117
     /tmp/ccLHoJv4.s:5261   .debug_loc:0000000000000676 .LLST7
     /tmp/ccLHoJv4.s:1392   .text:0000000000000440 .LBB119
     /tmp/ccLHoJv4.s:1404   .text:0000000000000448 .LBE119
     /tmp/ccLHoJv4.s:5268   .debug_loc:0000000000000699 .LLST8
     /tmp/ccLHoJv4.s:1001   .text:00000000000002fc .LBB213
     /tmp/ccLHoJv4.s:1012   .text:0000000000000300 .LBE213
GAS LISTING /tmp/ccLHoJv4.s 			page 53


     /tmp/ccLHoJv4.s:5276   .debug_loc:00000000000006bd .LLST28
     /tmp/ccLHoJv4.s:1017   .text:0000000000000304 .LBB215
     /tmp/ccLHoJv4.s:1031   .text:000000000000030c .LBE215
     /tmp/ccLHoJv4.s:5283   .debug_loc:00000000000006e0 .LLST29
     /tmp/ccLHoJv4.s:871    .text:0000000000000270 .LBB302
     /tmp/ccLHoJv4.s:882    .text:0000000000000274 .LBE302
     /tmp/ccLHoJv4.s:5290   .debug_loc:0000000000000703 .LLST41
     /tmp/ccLHoJv4.s:887    .text:0000000000000278 .LBB304
     /tmp/ccLHoJv4.s:899    .text:000000000000027c .LBE304
     /tmp/ccLHoJv4.s:5297   .debug_loc:0000000000000726 .LLST42
     /tmp/ccLHoJv4.s:996    .text:00000000000002f8 .LVL37
     /tmp/ccLHoJv4.s:137    .text:000000000000008c .LBB82
     /tmp/ccLHoJv4.s:153    .text:0000000000000098 .LBE82
     /tmp/ccLHoJv4.s:182    .text:00000000000000cc .LBB85
     /tmp/ccLHoJv4.s:197    .text:00000000000000d8 .LBE85
     /tmp/ccLHoJv4.s:5304   .debug_loc:0000000000000749 .LLST2
     /tmp/ccLHoJv4.s:1459   .text:0000000000000468 .LVL85
     /tmp/ccLHoJv4.s:5698   .debug_str:0000000000000889 .LASF181
     /tmp/ccLHoJv4.s:38     .text:0000000000000020 .LFB45
     /tmp/ccLHoJv4.s:113    .text:0000000000000070 .LFE45
     /tmp/ccLHoJv4.s:79     .text:0000000000000058 .LBB78
     /tmp/ccLHoJv4.s:95     .text:0000000000000064 .LBE78
     /tmp/ccLHoJv4.s:5312   .debug_loc:000000000000076d .LLST0
     /tmp/ccLHoJv4.s:98     .text:0000000000000064 .LBB80
     /tmp/ccLHoJv4.s:111    .text:0000000000000070 .LBE80
     /tmp/ccLHoJv4.s:10     .text:0000000000000000 .LFB44
     /tmp/ccLHoJv4.s:32     .text:0000000000000020 .LFE44
     /tmp/ccLHoJv4.s:5758   .debug_str:0000000000000ab0 .LASF184
     /tmp/ccLHoJv4.s:5740   .debug_str:0000000000000a45 .LASF185
     /tmp/ccLHoJv4.s:5480   .debug_str:0000000000000213 .LASF202
     /tmp/ccLHoJv4.s:5800   .debug_str:0000000000000be5 .LASF203
     /tmp/ccLHoJv4.s:5510   .debug_str:000000000000031a .LASF186
     /tmp/ccLHoJv4.s:5568   .debug_str:00000000000004dd .LASF187
     /tmp/ccLHoJv4.s:5498   .debug_str:00000000000002ba .LASF188
     /tmp/ccLHoJv4.s:151    .text:0000000000000098 .LVL3
     /tmp/ccLHoJv4.s:243    .text:0000000000000100 .LVL6
     /tmp/ccLHoJv4.s:711    .text:00000000000001d8 .LVL9
     /tmp/ccLHoJv4.s:763    .text:0000000000000200 .LVL13
     /tmp/ccLHoJv4.s:800    .text:0000000000000228 .LVL17
     /tmp/ccLHoJv4.s:833    .text:0000000000000244 .LVL21
     /tmp/ccLHoJv4.s:918    .text:0000000000000298 .LVL29
     /tmp/ccLHoJv4.s:937    .text:00000000000002b8 .LVL31
     /tmp/ccLHoJv4.s:984    .text:00000000000002e8 .LVL36
     /tmp/ccLHoJv4.s:1028   .text:000000000000030c .LVL41
     /tmp/ccLHoJv4.s:1096   .text:000000000000034c .LVL49
     /tmp/ccLHoJv4.s:1138   .text:0000000000000380 .LVL54
     /tmp/ccLHoJv4.s:1169   .text:0000000000000398 .LVL57
     /tmp/ccLHoJv4.s:1195   .text:00000000000003b0 .LVL59
     /tmp/ccLHoJv4.s:1215   .text:00000000000003c0 .LVL60
     /tmp/ccLHoJv4.s:1225   .text:00000000000003cc .LVL62
     /tmp/ccLHoJv4.s:1251   .text:00000000000003e0 .LVL64
     /tmp/ccLHoJv4.s:1271   .text:00000000000003f4 .LVL67
     /tmp/ccLHoJv4.s:1321   .text:000000000000041c .LVL73
     /tmp/ccLHoJv4.s:1437   .text:0000000000000460 .LVL84
     /tmp/ccLHoJv4.s:737    .text:00000000000001dc .LVL10
     /tmp/ccLHoJv4.s:774    .text:0000000000000204 .LVL14
     /tmp/ccLHoJv4.s:813    .text:000000000000022c .LVL18
GAS LISTING /tmp/ccLHoJv4.s 			page 54


     /tmp/ccLHoJv4.s:860    .text:000000000000026c .LVL24
     /tmp/ccLHoJv4.s:819    .text:0000000000000230 .LVL19
     /tmp/ccLHoJv4.s:825    .text:0000000000000234 .LVL20
     /tmp/ccLHoJv4.s:958    .text:00000000000002d0 .LVL33
     /tmp/ccLHoJv4.s:968    .text:00000000000002dc .LVL35
     /tmp/ccLHoJv4.s:950    .text:00000000000002c8 .LVL32
     /tmp/ccLHoJv4.s:1042   .text:0000000000000310 .LVL42
     /tmp/ccLHoJv4.s:1048   .text:0000000000000314 .LVL43
     /tmp/ccLHoJv4.s:1080   .text:000000000000033c .LVL48
     /tmp/ccLHoJv4.s:1074   .text:0000000000000338 .LVL47
     /tmp/ccLHoJv4.s:1060   .text:0000000000000324 .LVL45
     /tmp/ccLHoJv4.s:1067   .text:000000000000032c .LVL46
     /tmp/ccLHoJv4.s:1107   .text:0000000000000350 .LVL50
     /tmp/ccLHoJv4.s:1149   .text:0000000000000384 .LVL55
     /tmp/ccLHoJv4.s:1180   .text:000000000000039c .LVL58
     /tmp/ccLHoJv4.s:1262   .text:00000000000003e4 .LVL65
     /tmp/ccLHoJv4.s:1284   .text:00000000000003f8 .LVL68
     /tmp/ccLHoJv4.s:1290   .text:00000000000003fc .LVL69
     /tmp/ccLHoJv4.s:1296   .text:0000000000000400 .LVL70
     /tmp/ccLHoJv4.s:1305   .text:000000000000040c .LVL72
     /tmp/ccLHoJv4.s:703    .text:00000000000001cc .LVL7
     /tmp/ccLHoJv4.s:1410   .text:000000000000044c .LVL82
     /tmp/ccLHoJv4.s:1420   .text:0000000000000454 .LVL83
     /tmp/ccLHoJv4.s:1348   .text:000000000000042c .LVL76
     /tmp/ccLHoJv4.s:1357   .text:0000000000000430 .LVL77
     /tmp/ccLHoJv4.s:1371   .text:0000000000000438 .LVL78
     /tmp/ccLHoJv4.s:1378   .text:000000000000043c .LVL79
     /tmp/ccLHoJv4.s:1387   .text:0000000000000440 .LVL80
     /tmp/ccLHoJv4.s:1401   .text:0000000000000448 .LVL81
     /tmp/ccLHoJv4.s:1000   .text:00000000000002fc .LVL38
     /tmp/ccLHoJv4.s:1009   .text:0000000000000300 .LVL39
     /tmp/ccLHoJv4.s:1016   .text:0000000000000304 .LVL40
     /tmp/ccLHoJv4.s:870    .text:0000000000000270 .LVL25
     /tmp/ccLHoJv4.s:879    .text:0000000000000274 .LVL26
     /tmp/ccLHoJv4.s:886    .text:0000000000000278 .LVL27
     /tmp/ccLHoJv4.s:895    .text:000000000000027c .LVL28
     /tmp/ccLHoJv4.s:181    .text:00000000000000cc .LVL4
     /tmp/ccLHoJv4.s:191    .text:00000000000000d4 .LVL5
     /tmp/ccLHoJv4.s:78     .text:0000000000000058 .LVL1
     /tmp/ccLHoJv4.s:92     .text:0000000000000064 .LVL2
     /tmp/ccLHoJv4.s:1480   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccLHoJv4.s:198    .text:00000000000000d8 .LBB87
     /tmp/ccLHoJv4.s:248    .text:0000000000000108 .LBE87
     /tmp/ccLHoJv4.s:252    .text:0000000000000108 .LBB307
     /tmp/ccLHoJv4.s:262    .text:0000000000000114 .LBE307
     /tmp/ccLHoJv4.s:266    .text:0000000000000114 .LBB308
     /tmp/ccLHoJv4.s:278    .text:0000000000000120 .LBE308
     /tmp/ccLHoJv4.s:282    .text:0000000000000120 .LBB309
     /tmp/ccLHoJv4.s:296    .text:000000000000012c .LBE309
     /tmp/ccLHoJv4.s:300    .text:000000000000012c .LBB310
     /tmp/ccLHoJv4.s:316    .text:0000000000000138 .LBE310
     /tmp/ccLHoJv4.s:320    .text:0000000000000138 .LBB311
     /tmp/ccLHoJv4.s:338    .text:0000000000000144 .LBE311
     /tmp/ccLHoJv4.s:342    .text:0000000000000144 .LBB312
     /tmp/ccLHoJv4.s:362    .text:0000000000000150 .LBE312
     /tmp/ccLHoJv4.s:366    .text:0000000000000150 .LBB313
     /tmp/ccLHoJv4.s:388    .text:000000000000015c .LBE313
GAS LISTING /tmp/ccLHoJv4.s 			page 55


     /tmp/ccLHoJv4.s:392    .text:000000000000015c .LBB314
     /tmp/ccLHoJv4.s:416    .text:0000000000000168 .LBE314
     /tmp/ccLHoJv4.s:420    .text:0000000000000168 .LBB315
     /tmp/ccLHoJv4.s:446    .text:0000000000000174 .LBE315
     /tmp/ccLHoJv4.s:450    .text:0000000000000174 .LBB316
     /tmp/ccLHoJv4.s:478    .text:0000000000000180 .LBE316
     /tmp/ccLHoJv4.s:482    .text:0000000000000180 .LBB317
     /tmp/ccLHoJv4.s:512    .text:000000000000018c .LBE317
     /tmp/ccLHoJv4.s:516    .text:000000000000018c .LBB318
     /tmp/ccLHoJv4.s:548    .text:0000000000000198 .LBE318
     /tmp/ccLHoJv4.s:552    .text:0000000000000198 .LBB319
     /tmp/ccLHoJv4.s:586    .text:00000000000001a4 .LBE319
     /tmp/ccLHoJv4.s:590    .text:00000000000001a4 .LBB320
     /tmp/ccLHoJv4.s:626    .text:00000000000001b0 .LBE320
     /tmp/ccLHoJv4.s:630    .text:00000000000001b0 .LBB321
     /tmp/ccLHoJv4.s:668    .text:00000000000001bc .LBE321
     /tmp/ccLHoJv4.s:672    .text:00000000000001bc .LBB322
     /tmp/ccLHoJv4.s:900    .text:000000000000027c .LBE322
     /tmp/ccLHoJv4.s:922    .text:0000000000000298 .LBB323
     /tmp/ccLHoJv4.s:1455   .text:0000000000000460 .LBE323
     /tmp/ccLHoJv4.s:1172   .text:0000000000000398 .LBB158
     /tmp/ccLHoJv4.s:1213   .text:00000000000003bc .LBE158
     /tmp/ccLHoJv4.s:1217   .text:00000000000003c0 .LBB163
     /tmp/ccLHoJv4.s:1229   .text:00000000000003cc .LBE163
     /tmp/ccLHoJv4.s:1199   .text:00000000000003b0 .LBE159
     /tmp/ccLHoJv4.s:1218   .text:00000000000003c0 .LBB162
     /tmp/ccLHoJv4.s:1228   .text:00000000000003cc .LBE162
     /tmp/ccLHoJv4.s:941    .text:00000000000002b8 .LBB230
     /tmp/ccLHoJv4.s:982    .text:00000000000002e4 .LBE230
     /tmp/ccLHoJv4.s:986    .text:00000000000002e8 .LBB233
     /tmp/ccLHoJv4.s:991    .text:00000000000002f0 .LBE233
     /tmp/ccLHoJv4.s:803    .text:0000000000000228 .LBB248
     /tmp/ccLHoJv4.s:863    .text:000000000000026c .LBE248
     /tmp/ccLHoJv4.s:926    .text:0000000000000298 .LBB249
     /tmp/ccLHoJv4.s:939    .text:00000000000002b8 .LBE249

UNDEFINED SYMBOLS
_ZN7_thread4joinEPPS_
_ZN8MemAlloc11getInstanceEv
_ZN8MemAlloc6mallocEm
_ZN8MemAlloc7freememEPv
_ZN7_thread7runningE
_ZN7_thread15createCoroutineEPFvPvES0_
_ZN9Scheduler3putEP7_thread
_ZN7_thread8dispatchEv
_Znwm
_ZN4_sem7freeSemEPS_
_ZN4_sem4waitEv
_ZN4_sem7deblockEv
__getc
__putc
_ZN7_thread19createCouroutineCPPEPFvPvES0_
console_handler
